//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.07.28 at 05:34:43 PM CEST 
//


package ch.ehi.oereb.schemas.iso19139.gco;

import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.datatype.XMLGregorianCalendar;
import ch.ehi.oereb.schemas.gml._3_2.AngleTypeType;
import ch.ehi.oereb.schemas.gml._3_2.CodeTypeType;
import ch.ehi.oereb.schemas.gml._3_2.LengthTypeType;
import ch.ehi.oereb.schemas.gml._3_2.MeasureTypeType;
import ch.ehi.oereb.schemas.gml._3_2.ScaleTypeType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ch.ehi.oereb.schemas.iso19139.gco package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ch.ehi.oereb.schemas.iso19139.gco
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CodeListValueType }
     * 
     */
    public CodeListValueType createCodeListValueType() {
        return new CodeListValueType();
    }

    /**
     * Create an instance of {@link TypeNameType }
     * 
     */
    public TypeNameType createTypeNameType() {
        return new TypeNameType();
    }

    /**
     * Create an instance of {@link MultiplicityRangeType }
     * 
     */
    public MultiplicityRangeType createMultiplicityRangeType() {
        return new MultiplicityRangeType();
    }

    /**
     * Create an instance of {@link RecordTypeType }
     * 
     */
    public RecordTypeType createRecordTypeType() {
        return new RecordTypeType();
    }

    /**
     * Create an instance of {@link MultiplicityType }
     * 
     */
    public MultiplicityType createMultiplicityType() {
        return new MultiplicityType();
    }

    /**
     * Create an instance of {@link MemberNameType }
     * 
     */
    public MemberNameType createMemberNameType() {
        return new MemberNameType();
    }

    /**
     * Create an instance of {@link BinaryType }
     * 
     */
    public BinaryType createBinaryType() {
        return new BinaryType();
    }

    /**
     * Create an instance of {@link UnlimitedIntegerType }
     * 
     */
    public UnlimitedIntegerType createUnlimitedIntegerType() {
        return new UnlimitedIntegerType();
    }

    /**
     * Create an instance of {@link UomAreaPropertyType }
     * 
     */
    public UomAreaPropertyType createUomAreaPropertyType() {
        return new UomAreaPropertyType();
    }

    /**
     * Create an instance of {@link MultiplicityPropertyType }
     * 
     */
    public MultiplicityPropertyType createMultiplicityPropertyType() {
        return new MultiplicityPropertyType();
    }

    /**
     * Create an instance of {@link BooleanPropertyType }
     * 
     */
    public BooleanPropertyType createBooleanPropertyType() {
        return new BooleanPropertyType();
    }

    /**
     * Create an instance of {@link UomVelocityPropertyType }
     * 
     */
    public UomVelocityPropertyType createUomVelocityPropertyType() {
        return new UomVelocityPropertyType();
    }

    /**
     * Create an instance of {@link DateTimePropertyType }
     * 
     */
    public DateTimePropertyType createDateTimePropertyType() {
        return new DateTimePropertyType();
    }

    /**
     * Create an instance of {@link GenericNamePropertyType }
     * 
     */
    public GenericNamePropertyType createGenericNamePropertyType() {
        return new GenericNamePropertyType();
    }

    /**
     * Create an instance of {@link UomLengthPropertyType }
     * 
     */
    public UomLengthPropertyType createUomLengthPropertyType() {
        return new UomLengthPropertyType();
    }

    /**
     * Create an instance of {@link CharacterStringPropertyType }
     * 
     */
    public CharacterStringPropertyType createCharacterStringPropertyType() {
        return new CharacterStringPropertyType();
    }

    /**
     * Create an instance of {@link ScopedNamePropertyType }
     * 
     */
    public ScopedNamePropertyType createScopedNamePropertyType() {
        return new ScopedNamePropertyType();
    }

    /**
     * Create an instance of {@link MeasurePropertyType }
     * 
     */
    public MeasurePropertyType createMeasurePropertyType() {
        return new MeasurePropertyType();
    }

    /**
     * Create an instance of {@link UomScalePropertyType }
     * 
     */
    public UomScalePropertyType createUomScalePropertyType() {
        return new UomScalePropertyType();
    }

    /**
     * Create an instance of {@link RecordPropertyType }
     * 
     */
    public RecordPropertyType createRecordPropertyType() {
        return new RecordPropertyType();
    }

    /**
     * Create an instance of {@link LengthPropertyType }
     * 
     */
    public LengthPropertyType createLengthPropertyType() {
        return new LengthPropertyType();
    }

    /**
     * Create an instance of {@link UnlimitedIntegerPropertyType }
     * 
     */
    public UnlimitedIntegerPropertyType createUnlimitedIntegerPropertyType() {
        return new UnlimitedIntegerPropertyType();
    }

    /**
     * Create an instance of {@link DatePropertyType }
     * 
     */
    public DatePropertyType createDatePropertyType() {
        return new DatePropertyType();
    }

    /**
     * Create an instance of {@link UomTimePropertyType }
     * 
     */
    public UomTimePropertyType createUomTimePropertyType() {
        return new UomTimePropertyType();
    }

    /**
     * Create an instance of {@link TypeNamePropertyType }
     * 
     */
    public TypeNamePropertyType createTypeNamePropertyType() {
        return new TypeNamePropertyType();
    }

    /**
     * Create an instance of {@link DistancePropertyType }
     * 
     */
    public DistancePropertyType createDistancePropertyType() {
        return new DistancePropertyType();
    }

    /**
     * Create an instance of {@link NumberPropertyType }
     * 
     */
    public NumberPropertyType createNumberPropertyType() {
        return new NumberPropertyType();
    }

    /**
     * Create an instance of {@link BinaryPropertyType }
     * 
     */
    public BinaryPropertyType createBinaryPropertyType() {
        return new BinaryPropertyType();
    }

    /**
     * Create an instance of {@link UomAnglePropertyType }
     * 
     */
    public UomAnglePropertyType createUomAnglePropertyType() {
        return new UomAnglePropertyType();
    }

    /**
     * Create an instance of {@link MemberNamePropertyType }
     * 
     */
    public MemberNamePropertyType createMemberNamePropertyType() {
        return new MemberNamePropertyType();
    }

    /**
     * Create an instance of {@link DecimalPropertyType }
     * 
     */
    public DecimalPropertyType createDecimalPropertyType() {
        return new DecimalPropertyType();
    }

    /**
     * Create an instance of {@link UomVolumePropertyType }
     * 
     */
    public UomVolumePropertyType createUomVolumePropertyType() {
        return new UomVolumePropertyType();
    }

    /**
     * Create an instance of {@link RecordTypePropertyType }
     * 
     */
    public RecordTypePropertyType createRecordTypePropertyType() {
        return new RecordTypePropertyType();
    }

    /**
     * Create an instance of {@link ObjectReferencePropertyType }
     * 
     */
    public ObjectReferencePropertyType createObjectReferencePropertyType() {
        return new ObjectReferencePropertyType();
    }

    /**
     * Create an instance of {@link ScalePropertyType }
     * 
     */
    public ScalePropertyType createScalePropertyType() {
        return new ScalePropertyType();
    }

    /**
     * Create an instance of {@link IntegerPropertyType }
     * 
     */
    public IntegerPropertyType createIntegerPropertyType() {
        return new IntegerPropertyType();
    }

    /**
     * Create an instance of {@link MultiplicityRangePropertyType }
     * 
     */
    public MultiplicityRangePropertyType createMultiplicityRangePropertyType() {
        return new MultiplicityRangePropertyType();
    }

    /**
     * Create an instance of {@link LocalNamePropertyType }
     * 
     */
    public LocalNamePropertyType createLocalNamePropertyType() {
        return new LocalNamePropertyType();
    }

    /**
     * Create an instance of {@link AnglePropertyType }
     * 
     */
    public AnglePropertyType createAnglePropertyType() {
        return new AnglePropertyType();
    }

    /**
     * Create an instance of {@link UnitOfMeasurePropertyType }
     * 
     */
    public UnitOfMeasurePropertyType createUnitOfMeasurePropertyType() {
        return new UnitOfMeasurePropertyType();
    }

    /**
     * Create an instance of {@link RealPropertyType }
     * 
     */
    public RealPropertyType createRealPropertyType() {
        return new RealPropertyType();
    }

    /**
     * Create an instance of {@link CharacterString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "CharacterString")
    public CharacterString createCharacterString(String value) {
        return new CharacterString(value);
    }

    /**
     * Create an instance of {@link MultiplicityRange }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "MultiplicityRange")
    public MultiplicityRange createMultiplicityRange(MultiplicityRangeType value) {
        return new MultiplicityRange(value);
    }

    /**
     * Create an instance of {@link LocalName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "LocalName", substitutionHeadNamespace = "http://www.isotc211.org/2005/gco", substitutionHeadName = "AbstractGenericName")
    public LocalName createLocalName(CodeTypeType value) {
        return new LocalName(value);
    }

    /**
     * Create an instance of {@link Date }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Date")
    public Date createDate(String value) {
        return new Date(value);
    }

    /**
     * Create an instance of {@link ch.ehi.oereb.schemas.iso19139.gco.Boolean }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Boolean")
    public ch.ehi.oereb.schemas.iso19139.gco.Boolean createBoolean(java.lang.Boolean value) {
        return new ch.ehi.oereb.schemas.iso19139.gco.Boolean(value);
    }

    /**
     * Create an instance of {@link Angle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Angle", substitutionHeadNamespace = "http://www.isotc211.org/2005/gco", substitutionHeadName = "Measure")
    public Angle createAngle(AngleTypeType value) {
        return new Angle(value);
    }

    /**
     * Create an instance of {@link MemberName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "MemberName")
    public MemberName createMemberName(MemberNameType value) {
        return new MemberName(value);
    }

    /**
     * Create an instance of {@link Binary }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Binary")
    public Binary createBinary(BinaryType value) {
        return new Binary(value);
    }

    /**
     * Create an instance of {@link TypeName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "TypeName")
    public TypeName createTypeName(TypeNameType value) {
        return new TypeName(value);
    }

    /**
     * Create an instance of {@link UnlimitedInteger }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "UnlimitedInteger")
    public UnlimitedInteger createUnlimitedInteger(UnlimitedIntegerType value) {
        return new UnlimitedInteger(value);
    }

    /**
     * Create an instance of {@link Integer }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Integer")
    public Integer createInteger(BigInteger value) {
        return new Integer(value);
    }

    /**
     * Create an instance of {@link AbstractGenericName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "AbstractGenericName")
    public AbstractGenericName createAbstractGenericName(CodeTypeType value) {
        return new AbstractGenericName(value);
    }

    /**
     * Create an instance of {@link Measure }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Measure")
    public Measure createMeasure(MeasureTypeType value) {
        return new Measure(value);
    }

    /**
     * Create an instance of {@link Real }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Real")
    public Real createReal(Double value) {
        return new Real(value);
    }

    /**
     * Create an instance of {@link Scale }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Scale", substitutionHeadNamespace = "http://www.isotc211.org/2005/gco", substitutionHeadName = "Measure")
    public Scale createScale(ScaleTypeType value) {
        return new Scale(value);
    }

    /**
     * Create an instance of {@link Record }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Record")
    public Record createRecord(Object value) {
        return new Record(value);
    }

    /**
     * Create an instance of {@link RecordType }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "RecordType")
    public RecordType createRecordType(RecordTypeType value) {
        return new RecordType(value);
    }

    /**
     * Create an instance of {@link DateTime }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "DateTime")
    public DateTime createDateTime(XMLGregorianCalendar value) {
        return new DateTime(value);
    }

    /**
     * Create an instance of {@link Distance }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Distance", substitutionHeadNamespace = "http://www.isotc211.org/2005/gco", substitutionHeadName = "Length")
    public Distance createDistance(LengthTypeType value) {
        return new Distance(value);
    }

    /**
     * Create an instance of {@link AbstractObject }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "AbstractObject")
    public AbstractObject createAbstractObject(AbstractObjectType value) {
        return new AbstractObject(value);
    }

    /**
     * Create an instance of {@link ScopedName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "ScopedName", substitutionHeadNamespace = "http://www.isotc211.org/2005/gco", substitutionHeadName = "AbstractGenericName")
    public ScopedName createScopedName(CodeTypeType value) {
        return new ScopedName(value);
    }

    /**
     * Create an instance of {@link Multiplicity }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Multiplicity")
    public Multiplicity createMultiplicity(MultiplicityType value) {
        return new Multiplicity(value);
    }

    /**
     * Create an instance of {@link Decimal }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Decimal")
    public Decimal createDecimal(BigDecimal value) {
        return new Decimal(value);
    }

    /**
     * Create an instance of {@link Length }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.isotc211.org/2005/gco", name = "Length", substitutionHeadNamespace = "http://www.isotc211.org/2005/gco", substitutionHeadName = "Measure")
    public Length createLength(LengthTypeType value) {
        return new Length(value);
    }

}
