//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.07.28 at 05:34:43 PM CEST 
//


package ch.ehi.oereb.schemas.gml._3_2;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ch.ehi.oereb.schemas.gml._3_2 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _GridTypeTypeLimits_QNAME = new QName("http://www.opengis.net/gml/3.2", "limits");
    private final static QName _GridTypeTypeAxisName_QNAME = new QName("http://www.opengis.net/gml/3.2", "axisName");
    private final static QName _GridTypeTypeAxisLabels_QNAME = new QName("http://www.opengis.net/gml/3.2", "axisLabels");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ch.ehi.oereb.schemas.gml._3_2
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Count.Type }
     * 
     */
    public Count.Type createCountType() {
        return new Count.Type();
    }

    /**
     * Create an instance of {@link ch.ehi.oereb.schemas.gml._3_2.Boolean.Type }
     * 
     */
    public ch.ehi.oereb.schemas.gml._3_2.Boolean.Type createBooleanType() {
        return new ch.ehi.oereb.schemas.gml._3_2.Boolean.Type();
    }

    /**
     * Create an instance of {@link Category.Type }
     * 
     */
    public Category.Type createCategoryType() {
        return new Category.Type();
    }

    /**
     * Create an instance of {@link Quantity.Type }
     * 
     */
    public Quantity.Type createQuantityType() {
        return new Quantity.Type();
    }

    /**
     * Create an instance of {@link AbstractGriddedSurfaceTypeType.Rows }
     * 
     */
    public AbstractGriddedSurfaceTypeType.Rows createAbstractGriddedSurfaceTypeTypeRows() {
        return new AbstractGriddedSurfaceTypeType.Rows();
    }

    /**
     * Create an instance of {@link ClothoidTypeType }
     * 
     */
    public ClothoidTypeType createClothoidTypeType() {
        return new ClothoidTypeType();
    }

    /**
     * Create an instance of {@link TinTypeType }
     * 
     */
    public TinTypeType createTinTypeType() {
        return new TinTypeType();
    }

    /**
     * Create an instance of {@link CodeTypeType }
     * 
     */
    public CodeTypeType createCodeTypeType() {
        return new CodeTypeType();
    }

    /**
     * Create an instance of {@link TopoPointTypeType }
     * 
     */
    public TopoPointTypeType createTopoPointTypeType() {
        return new TopoPointTypeType();
    }

    /**
     * Create an instance of {@link DerivedCRSPropertyTypeType }
     * 
     */
    public DerivedCRSPropertyTypeType createDerivedCRSPropertyTypeType() {
        return new DerivedCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link DomainSetTypeType }
     * 
     */
    public DomainSetTypeType createDomainSetTypeType() {
        return new DomainSetTypeType();
    }

    /**
     * Create an instance of {@link TopoVolumePropertyTypeType }
     * 
     */
    public TopoVolumePropertyTypeType createTopoVolumePropertyTypeType() {
        return new TopoVolumePropertyTypeType();
    }

    /**
     * Create an instance of {@link ArcStringTypeType }
     * 
     */
    public ArcStringTypeType createArcStringTypeType() {
        return new ArcStringTypeType();
    }

    /**
     * Create an instance of {@link SphereTypeType }
     * 
     */
    public SphereTypeType createSphereTypeType() {
        return new SphereTypeType();
    }

    /**
     * Create an instance of {@link CoverageFunctionTypeType }
     * 
     */
    public CoverageFunctionTypeType createCoverageFunctionTypeType() {
        return new CoverageFunctionTypeType();
    }

    /**
     * Create an instance of {@link TimeCSPropertyTypeType }
     * 
     */
    public TimeCSPropertyTypeType createTimeCSPropertyTypeType() {
        return new TimeCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link TopoCurveTypeType }
     * 
     */
    public TopoCurveTypeType createTopoCurveTypeType() {
        return new TopoCurveTypeType();
    }

    /**
     * Create an instance of {@link RectifiedGridTypeType }
     * 
     */
    public RectifiedGridTypeType createRectifiedGridTypeType() {
        return new RectifiedGridTypeType();
    }

    /**
     * Create an instance of {@link GridTypeType }
     * 
     */
    public GridTypeType createGridTypeType() {
        return new GridTypeType();
    }

    /**
     * Create an instance of {@link AffineCSPropertyTypeType }
     * 
     */
    public AffineCSPropertyTypeType createAffineCSPropertyTypeType() {
        return new AffineCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link FeaturePropertyTypeType }
     * 
     */
    public FeaturePropertyTypeType createFeaturePropertyTypeType() {
        return new FeaturePropertyTypeType();
    }

    /**
     * Create an instance of {@link GeometryPropertyTypeType }
     * 
     */
    public GeometryPropertyTypeType createGeometryPropertyTypeType() {
        return new GeometryPropertyTypeType();
    }

    /**
     * Create an instance of {@link GeometricComplexTypeType }
     * 
     */
    public GeometricComplexTypeType createGeometricComplexTypeType() {
        return new GeometricComplexTypeType();
    }

    /**
     * Create an instance of {@link ParameterValueTypeType }
     * 
     */
    public ParameterValueTypeType createParameterValueTypeType() {
        return new ParameterValueTypeType();
    }

    /**
     * Create an instance of {@link SingleCRSPropertyTypeType }
     * 
     */
    public SingleCRSPropertyTypeType createSingleCRSPropertyTypeType() {
        return new SingleCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link GeometryArrayPropertyTypeType }
     * 
     */
    public GeometryArrayPropertyTypeType createGeometryArrayPropertyTypeType() {
        return new GeometryArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link AbstractGeneralOperationParameterPropertyTypeType }
     * 
     */
    public AbstractGeneralOperationParameterPropertyTypeType createAbstractGeneralOperationParameterPropertyTypeType() {
        return new AbstractGeneralOperationParameterPropertyTypeType();
    }

    /**
     * Create an instance of {@link DiscreteCoverageTypeType }
     * 
     */
    public DiscreteCoverageTypeType createDiscreteCoverageTypeType() {
        return new DiscreteCoverageTypeType();
    }

    /**
     * Create an instance of {@link CartesianCSPropertyTypeType }
     * 
     */
    public CartesianCSPropertyTypeType createCartesianCSPropertyTypeType() {
        return new CartesianCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link PointPropertyTypeType }
     * 
     */
    public PointPropertyTypeType createPointPropertyTypeType() {
        return new PointPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeInstantTypeType }
     * 
     */
    public TimeInstantTypeType createTimeInstantTypeType() {
        return new TimeInstantTypeType();
    }

    /**
     * Create an instance of {@link EngineeringCRSTypeType }
     * 
     */
    public EngineeringCRSTypeType createEngineeringCRSTypeType() {
        return new EngineeringCRSTypeType();
    }

    /**
     * Create an instance of {@link DefinitionTypeType }
     * 
     */
    public DefinitionTypeType createDefinitionTypeType() {
        return new DefinitionTypeType();
    }

    /**
     * Create an instance of {@link OperationParameterGroupPropertyTypeType }
     * 
     */
    public OperationParameterGroupPropertyTypeType createOperationParameterGroupPropertyTypeType() {
        return new OperationParameterGroupPropertyTypeType();
    }

    /**
     * Create an instance of {@link CRSPropertyTypeType }
     * 
     */
    public CRSPropertyTypeType createCRSPropertyTypeType() {
        return new CRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link EllipsoidalCSPropertyTypeType }
     * 
     */
    public EllipsoidalCSPropertyTypeType createEllipsoidalCSPropertyTypeType() {
        return new EllipsoidalCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link AbstractGeneralParameterValuePropertyTypeType }
     * 
     */
    public AbstractGeneralParameterValuePropertyTypeType createAbstractGeneralParameterValuePropertyTypeType() {
        return new AbstractGeneralParameterValuePropertyTypeType();
    }

    /**
     * Create an instance of {@link OperationMethodTypeType }
     * 
     */
    public OperationMethodTypeType createOperationMethodTypeType() {
        return new OperationMethodTypeType();
    }

    /**
     * Create an instance of {@link AbstractRingPropertyTypeType }
     * 
     */
    public AbstractRingPropertyTypeType createAbstractRingPropertyTypeType() {
        return new AbstractRingPropertyTypeType();
    }

    /**
     * Create an instance of {@link SurfaceTypeType }
     * 
     */
    public SurfaceTypeType createSurfaceTypeType() {
        return new SurfaceTypeType();
    }

    /**
     * Create an instance of {@link MeasureTypeType }
     * 
     */
    public MeasureTypeType createMeasureTypeType() {
        return new MeasureTypeType();
    }

    /**
     * Create an instance of {@link VerticalCSPropertyTypeType }
     * 
     */
    public VerticalCSPropertyTypeType createVerticalCSPropertyTypeType() {
        return new VerticalCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link AbstractSolidTypeType }
     * 
     */
    public AbstractSolidTypeType createAbstractSolidTypeType() {
        return new AbstractSolidTypeType();
    }

    /**
     * Create an instance of {@link GeneralConversionPropertyTypeType }
     * 
     */
    public GeneralConversionPropertyTypeType createGeneralConversionPropertyTypeType() {
        return new GeneralConversionPropertyTypeType();
    }

    /**
     * Create an instance of {@link StringOrRefTypeType }
     * 
     */
    public StringOrRefTypeType createStringOrRefTypeType() {
        return new StringOrRefTypeType();
    }

    /**
     * Create an instance of {@link UserDefinedCSPropertyTypeType }
     * 
     */
    public UserDefinedCSPropertyTypeType createUserDefinedCSPropertyTypeType() {
        return new UserDefinedCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link SurfacePropertyTypeType }
     * 
     */
    public SurfacePropertyTypeType createSurfacePropertyTypeType() {
        return new SurfacePropertyTypeType();
    }

    /**
     * Create an instance of {@link PolarCSPropertyTypeType }
     * 
     */
    public PolarCSPropertyTypeType createPolarCSPropertyTypeType() {
        return new PolarCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link DirectedObservationAtDistanceTypeType }
     * 
     */
    public DirectedObservationAtDistanceTypeType createDirectedObservationAtDistanceTypeType() {
        return new DirectedObservationAtDistanceTypeType();
    }

    /**
     * Create an instance of {@link DirectedObservationTypeType }
     * 
     */
    public DirectedObservationTypeType createDirectedObservationTypeType() {
        return new DirectedObservationTypeType();
    }

    /**
     * Create an instance of {@link ObservationTypeType }
     * 
     */
    public ObservationTypeType createObservationTypeType() {
        return new ObservationTypeType();
    }

    /**
     * Create an instance of {@link GeocentricCRSPropertyTypeType }
     * 
     */
    public GeocentricCRSPropertyTypeType createGeocentricCRSPropertyTypeType() {
        return new GeocentricCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link TemporalDatumPropertyTypeType }
     * 
     */
    public TemporalDatumPropertyTypeType createTemporalDatumPropertyTypeType() {
        return new TemporalDatumPropertyTypeType();
    }

    /**
     * Create an instance of {@link LinearRingTypeType }
     * 
     */
    public LinearRingTypeType createLinearRingTypeType() {
        return new LinearRingTypeType();
    }

    /**
     * Create an instance of {@link PrimeMeridianPropertyTypeType }
     * 
     */
    public PrimeMeridianPropertyTypeType createPrimeMeridianPropertyTypeType() {
        return new PrimeMeridianPropertyTypeType();
    }

    /**
     * Create an instance of {@link MappingRuleTypeType }
     * 
     */
    public MappingRuleTypeType createMappingRuleTypeType() {
        return new MappingRuleTypeType();
    }

    /**
     * Create an instance of {@link LinearCSPropertyTypeType }
     * 
     */
    public LinearCSPropertyTypeType createLinearCSPropertyTypeType() {
        return new LinearCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link CompoundCRSPropertyTypeType }
     * 
     */
    public CompoundCRSPropertyTypeType createCompoundCRSPropertyTypeType() {
        return new CompoundCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link VerticalCRSPropertyTypeType }
     * 
     */
    public VerticalCRSPropertyTypeType createVerticalCRSPropertyTypeType() {
        return new VerticalCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link MultiCurveTypeType }
     * 
     */
    public MultiCurveTypeType createMultiCurveTypeType() {
        return new MultiCurveTypeType();
    }

    /**
     * Create an instance of {@link BezierTypeType }
     * 
     */
    public BezierTypeType createBezierTypeType() {
        return new BezierTypeType();
    }

    /**
     * Create an instance of {@link BSplineTypeType }
     * 
     */
    public BSplineTypeType createBSplineTypeType() {
        return new BSplineTypeType();
    }

    /**
     * Create an instance of {@link EllipsoidalCSTypeType }
     * 
     */
    public EllipsoidalCSTypeType createEllipsoidalCSTypeType() {
        return new EllipsoidalCSTypeType();
    }

    /**
     * Create an instance of {@link CircleTypeType }
     * 
     */
    public CircleTypeType createCircleTypeType() {
        return new CircleTypeType();
    }

    /**
     * Create an instance of {@link ArcTypeType }
     * 
     */
    public ArcTypeType createArcTypeType() {
        return new ArcTypeType();
    }

    /**
     * Create an instance of {@link BoundingShapeTypeType }
     * 
     */
    public BoundingShapeTypeType createBoundingShapeTypeType() {
        return new BoundingShapeTypeType();
    }

    /**
     * Create an instance of {@link GeodeticCRSTypeType }
     * 
     */
    public GeodeticCRSTypeType createGeodeticCRSTypeType() {
        return new GeodeticCRSTypeType();
    }

    /**
     * Create an instance of {@link ObliqueCartesianCSPropertyTypeType }
     * 
     */
    public ObliqueCartesianCSPropertyTypeType createObliqueCartesianCSPropertyTypeType() {
        return new ObliqueCartesianCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link EngineeringCRSPropertyTypeType }
     * 
     */
    public EngineeringCRSPropertyTypeType createEngineeringCRSPropertyTypeType() {
        return new EngineeringCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link MovingObjectStatusTypeType }
     * 
     */
    public MovingObjectStatusTypeType createMovingObjectStatusTypeType() {
        return new MovingObjectStatusTypeType();
    }

    /**
     * Create an instance of {@link TopoVolumeTypeType }
     * 
     */
    public TopoVolumeTypeType createTopoVolumeTypeType() {
        return new TopoVolumeTypeType();
    }

    /**
     * Create an instance of {@link ImageDatumTypeType }
     * 
     */
    public ImageDatumTypeType createImageDatumTypeType() {
        return new ImageDatumTypeType();
    }

    /**
     * Create an instance of {@link SurfacePatchArrayPropertyTypeType }
     * 
     */
    public SurfacePatchArrayPropertyTypeType createSurfacePatchArrayPropertyTypeType() {
        return new SurfacePatchArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link MultiCurvePropertyTypeType }
     * 
     */
    public MultiCurvePropertyTypeType createMultiCurvePropertyTypeType() {
        return new MultiCurvePropertyTypeType();
    }

    /**
     * Create an instance of {@link SolidPropertyTypeType }
     * 
     */
    public SolidPropertyTypeType createSolidPropertyTypeType() {
        return new SolidPropertyTypeType();
    }

    /**
     * Create an instance of {@link OperationParameterPropertyTypeType }
     * 
     */
    public OperationParameterPropertyTypeType createOperationParameterPropertyTypeType() {
        return new OperationParameterPropertyTypeType();
    }

    /**
     * Create an instance of {@link SecondDefiningParameter }
     * 
     */
    public SecondDefiningParameter createSecondDefiningParameter() {
        return new SecondDefiningParameter();
    }

    /**
     * Create an instance of {@link LengthTypeType }
     * 
     */
    public LengthTypeType createLengthTypeType() {
        return new LengthTypeType();
    }

    /**
     * Create an instance of {@link LinearCSTypeType }
     * 
     */
    public LinearCSTypeType createLinearCSTypeType() {
        return new LinearCSTypeType();
    }

    /**
     * Create an instance of {@link TemporalCRSTypeType }
     * 
     */
    public TemporalCRSTypeType createTemporalCRSTypeType() {
        return new TemporalCRSTypeType();
    }

    /**
     * Create an instance of {@link DirectedTopoSolidPropertyTypeType }
     * 
     */
    public DirectedTopoSolidPropertyTypeType createDirectedTopoSolidPropertyTypeType() {
        return new DirectedTopoSolidPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeOrdinalReferenceSystemTypeType }
     * 
     */
    public TimeOrdinalReferenceSystemTypeType createTimeOrdinalReferenceSystemTypeType() {
        return new TimeOrdinalReferenceSystemTypeType();
    }

    /**
     * Create an instance of {@link TimeReferenceSystemTypeType }
     * 
     */
    public TimeReferenceSystemTypeType createTimeReferenceSystemTypeType() {
        return new TimeReferenceSystemTypeType();
    }

    /**
     * Create an instance of {@link TimeIntervalLengthTypeType }
     * 
     */
    public TimeIntervalLengthTypeType createTimeIntervalLengthTypeType() {
        return new TimeIntervalLengthTypeType();
    }

    /**
     * Create an instance of {@link CoordinateSystemPropertyTypeType }
     * 
     */
    public CoordinateSystemPropertyTypeType createCoordinateSystemPropertyTypeType() {
        return new CoordinateSystemPropertyTypeType();
    }

    /**
     * Create an instance of {@link GeographicCRSTypeType }
     * 
     */
    public GeographicCRSTypeType createGeographicCRSTypeType() {
        return new GeographicCRSTypeType();
    }

    /**
     * Create an instance of {@link CircleByCenterPointTypeType }
     * 
     */
    public CircleByCenterPointTypeType createCircleByCenterPointTypeType() {
        return new CircleByCenterPointTypeType();
    }

    /**
     * Create an instance of {@link ArcByCenterPointTypeType }
     * 
     */
    public ArcByCenterPointTypeType createArcByCenterPointTypeType() {
        return new ArcByCenterPointTypeType();
    }

    /**
     * Create an instance of {@link ConversionToPreferredUnitTypeType }
     * 
     */
    public ConversionToPreferredUnitTypeType createConversionToPreferredUnitTypeType() {
        return new ConversionToPreferredUnitTypeType();
    }

    /**
     * Create an instance of {@link DerivedCRSTypeType }
     * 
     */
    public DerivedCRSTypeType createDerivedCRSTypeType() {
        return new DerivedCRSTypeType();
    }

    /**
     * Create an instance of {@link UserDefinedCSTypeType }
     * 
     */
    public UserDefinedCSTypeType createUserDefinedCSTypeType() {
        return new UserDefinedCSTypeType();
    }

    /**
     * Create an instance of {@link FeatureArrayPropertyTypeType }
     * 
     */
    public FeatureArrayPropertyTypeType createFeatureArrayPropertyTypeType() {
        return new FeatureArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link TopoPrimitiveMemberTypeType }
     * 
     */
    public TopoPrimitiveMemberTypeType createTopoPrimitiveMemberTypeType() {
        return new TopoPrimitiveMemberTypeType();
    }

    /**
     * Create an instance of {@link MultiSurfacePropertyTypeType }
     * 
     */
    public MultiSurfacePropertyTypeType createMultiSurfacePropertyTypeType() {
        return new MultiSurfacePropertyTypeType();
    }

    /**
     * Create an instance of {@link CylinderTypeType }
     * 
     */
    public CylinderTypeType createCylinderTypeType() {
        return new CylinderTypeType();
    }

    /**
     * Create an instance of {@link TopoSolidTypeType }
     * 
     */
    public TopoSolidTypeType createTopoSolidTypeType() {
        return new TopoSolidTypeType();
    }

    /**
     * Create an instance of {@link MultiPointPropertyTypeType }
     * 
     */
    public MultiPointPropertyTypeType createMultiPointPropertyTypeType() {
        return new MultiPointPropertyTypeType();
    }

    /**
     * Create an instance of {@link LineStringSegmentTypeType }
     * 
     */
    public LineStringSegmentTypeType createLineStringSegmentTypeType() {
        return new LineStringSegmentTypeType();
    }

    /**
     * Create an instance of {@link AngleTypeType }
     * 
     */
    public AngleTypeType createAngleTypeType() {
        return new AngleTypeType();
    }

    /**
     * Create an instance of {@link CylindricalCSPropertyTypeType }
     * 
     */
    public CylindricalCSPropertyTypeType createCylindricalCSPropertyTypeType() {
        return new CylindricalCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link CompoundCRSTypeType }
     * 
     */
    public CompoundCRSTypeType createCompoundCRSTypeType() {
        return new CompoundCRSTypeType();
    }

    /**
     * Create an instance of {@link GeodeticDatumPropertyTypeType }
     * 
     */
    public GeodeticDatumPropertyTypeType createGeodeticDatumPropertyTypeType() {
        return new GeodeticDatumPropertyTypeType();
    }

    /**
     * Create an instance of {@link SurfaceArrayPropertyTypeType }
     * 
     */
    public SurfaceArrayPropertyTypeType createSurfaceArrayPropertyTypeType() {
        return new SurfaceArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link IndirectEntryTypeType }
     * 
     */
    public IndirectEntryTypeType createIndirectEntryTypeType() {
        return new IndirectEntryTypeType();
    }

    /**
     * Create an instance of {@link OperationMethodPropertyTypeType }
     * 
     */
    public OperationMethodPropertyTypeType createOperationMethodPropertyTypeType() {
        return new OperationMethodPropertyTypeType();
    }

    /**
     * Create an instance of {@link DynamicFeatureMemberTypeType }
     * 
     */
    public DynamicFeatureMemberTypeType createDynamicFeatureMemberTypeType() {
        return new DynamicFeatureMemberTypeType();
    }

    /**
     * Create an instance of {@link UnitOfMeasureTypeType }
     * 
     */
    public UnitOfMeasureTypeType createUnitOfMeasureTypeType() {
        return new UnitOfMeasureTypeType();
    }

    /**
     * Create an instance of {@link ImageCRSPropertyTypeType }
     * 
     */
    public ImageCRSPropertyTypeType createImageCRSPropertyTypeType() {
        return new ImageCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link CurvePropertyTypeType }
     * 
     */
    public CurvePropertyTypeType createCurvePropertyTypeType() {
        return new CurvePropertyTypeType();
    }

    /**
     * Create an instance of {@link DirectedNodePropertyTypeType }
     * 
     */
    public DirectedNodePropertyTypeType createDirectedNodePropertyTypeType() {
        return new DirectedNodePropertyTypeType();
    }

    /**
     * Create an instance of {@link ResultTypeType }
     * 
     */
    public ResultTypeType createResultTypeType() {
        return new ResultTypeType();
    }

    /**
     * Create an instance of {@link ImageDatumPropertyTypeType }
     * 
     */
    public ImageDatumPropertyTypeType createImageDatumPropertyTypeType() {
        return new ImageDatumPropertyTypeType();
    }

    /**
     * Create an instance of {@link BaseUnitTypeType }
     * 
     */
    public BaseUnitTypeType createBaseUnitTypeType() {
        return new BaseUnitTypeType();
    }

    /**
     * Create an instance of {@link UnitDefinitionTypeType }
     * 
     */
    public UnitDefinitionTypeType createUnitDefinitionTypeType() {
        return new UnitDefinitionTypeType();
    }

    /**
     * Create an instance of {@link TimeCoordinateSystemTypeType }
     * 
     */
    public TimeCoordinateSystemTypeType createTimeCoordinateSystemTypeType() {
        return new TimeCoordinateSystemTypeType();
    }

    /**
     * Create an instance of {@link SolidArrayPropertyTypeType }
     * 
     */
    public SolidArrayPropertyTypeType createSolidArrayPropertyTypeType() {
        return new SolidArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link CurveArrayPropertyTypeType }
     * 
     */
    public CurveArrayPropertyTypeType createCurveArrayPropertyTypeType() {
        return new CurveArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeClockTypeType }
     * 
     */
    public TimeClockTypeType createTimeClockTypeType() {
        return new TimeClockTypeType();
    }

    /**
     * Create an instance of {@link GeodeticCRSPropertyTypeType }
     * 
     */
    public GeodeticCRSPropertyTypeType createGeodeticCRSPropertyTypeType() {
        return new GeodeticCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimePrimitivePropertyTypeType }
     * 
     */
    public TimePrimitivePropertyTypeType createTimePrimitivePropertyTypeType() {
        return new TimePrimitivePropertyTypeType();
    }

    /**
     * Create an instance of {@link TopoComplexPropertyTypeType }
     * 
     */
    public TopoComplexPropertyTypeType createTopoComplexPropertyTypeType() {
        return new TopoComplexPropertyTypeType();
    }

    /**
     * Create an instance of {@link ReferenceTypeType }
     * 
     */
    public ReferenceTypeType createReferenceTypeType() {
        return new ReferenceTypeType();
    }

    /**
     * Create an instance of {@link TopoSurfaceTypeType }
     * 
     */
    public TopoSurfaceTypeType createTopoSurfaceTypeType() {
        return new TopoSurfaceTypeType();
    }

    /**
     * Create an instance of {@link TimeCSTypeType }
     * 
     */
    public TimeCSTypeType createTimeCSTypeType() {
        return new TimeCSTypeType();
    }

    /**
     * Create an instance of {@link CurveSegmentArrayPropertyTypeType }
     * 
     */
    public CurveSegmentArrayPropertyTypeType createCurveSegmentArrayPropertyTypeType() {
        return new CurveSegmentArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link PassThroughOperationTypeType }
     * 
     */
    public PassThroughOperationTypeType createPassThroughOperationTypeType() {
        return new PassThroughOperationTypeType();
    }

    /**
     * Create an instance of {@link VerticalCRSTypeType }
     * 
     */
    public VerticalCRSTypeType createVerticalCRSTypeType() {
        return new VerticalCRSTypeType();
    }

    /**
     * Create an instance of {@link AssociationRoleTypeType }
     * 
     */
    public AssociationRoleTypeType createAssociationRoleTypeType() {
        return new AssociationRoleTypeType();
    }

    /**
     * Create an instance of {@link CompositeValueTypeType }
     * 
     */
    public CompositeValueTypeType createCompositeValueTypeType() {
        return new CompositeValueTypeType();
    }

    /**
     * Create an instance of {@link ValueArrayPropertyTypeType }
     * 
     */
    public ValueArrayPropertyTypeType createValueArrayPropertyTypeType() {
        return new ValueArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link TemporalCSPropertyTypeType }
     * 
     */
    public TemporalCSPropertyTypeType createTemporalCSPropertyTypeType() {
        return new TemporalCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link DirectedEdgePropertyTypeType }
     * 
     */
    public DirectedEdgePropertyTypeType createDirectedEdgePropertyTypeType() {
        return new DirectedEdgePropertyTypeType();
    }

    /**
     * Create an instance of {@link PrimeMeridianTypeType }
     * 
     */
    public PrimeMeridianTypeType createPrimeMeridianTypeType() {
        return new PrimeMeridianTypeType();
    }

    /**
     * Create an instance of {@link CompositeSolidTypeType }
     * 
     */
    public CompositeSolidTypeType createCompositeSolidTypeType() {
        return new CompositeSolidTypeType();
    }

    /**
     * Create an instance of {@link GeodesicTypeType }
     * 
     */
    public GeodesicTypeType createGeodesicTypeType() {
        return new GeodesicTypeType();
    }

    /**
     * Create an instance of {@link GeodesicStringTypeType }
     * 
     */
    public GeodesicStringTypeType createGeodesicStringTypeType() {
        return new GeodesicStringTypeType();
    }

    /**
     * Create an instance of {@link PriorityLocationPropertyTypeType }
     * 
     */
    public PriorityLocationPropertyTypeType createPriorityLocationPropertyTypeType() {
        return new PriorityLocationPropertyTypeType();
    }

    /**
     * Create an instance of {@link LocationPropertyTypeType }
     * 
     */
    public LocationPropertyTypeType createLocationPropertyTypeType() {
        return new LocationPropertyTypeType();
    }

    /**
     * Create an instance of {@link DefinitionProxyTypeType }
     * 
     */
    public DefinitionProxyTypeType createDefinitionProxyTypeType() {
        return new DefinitionProxyTypeType();
    }

    /**
     * Create an instance of {@link ValueArrayTypeType }
     * 
     */
    public ValueArrayTypeType createValueArrayTypeType() {
        return new ValueArrayTypeType();
    }

    /**
     * Create an instance of {@link TargetPropertyTypeType }
     * 
     */
    public TargetPropertyTypeType createTargetPropertyTypeType() {
        return new TargetPropertyTypeType();
    }

    /**
     * Create an instance of {@link DynamicFeatureCollectionTypeType }
     * 
     */
    public DynamicFeatureCollectionTypeType createDynamicFeatureCollectionTypeType() {
        return new DynamicFeatureCollectionTypeType();
    }

    /**
     * Create an instance of {@link DynamicFeatureTypeType }
     * 
     */
    public DynamicFeatureTypeType createDynamicFeatureTypeType() {
        return new DynamicFeatureTypeType();
    }

    /**
     * Create an instance of {@link DirectedFacePropertyTypeType }
     * 
     */
    public DirectedFacePropertyTypeType createDirectedFacePropertyTypeType() {
        return new DirectedFacePropertyTypeType();
    }

    /**
     * Create an instance of {@link DirectPositionListTypeType }
     * 
     */
    public DirectPositionListTypeType createDirectPositionListTypeType() {
        return new DirectPositionListTypeType();
    }

    /**
     * Create an instance of {@link VerticalCSTypeType }
     * 
     */
    public VerticalCSTypeType createVerticalCSTypeType() {
        return new VerticalCSTypeType();
    }

    /**
     * Create an instance of {@link ArrayAssociationTypeType }
     * 
     */
    public ArrayAssociationTypeType createArrayAssociationTypeType() {
        return new ArrayAssociationTypeType();
    }

    /**
     * Create an instance of {@link TemporalCSTypeType }
     * 
     */
    public TemporalCSTypeType createTemporalCSTypeType() {
        return new TemporalCSTypeType();
    }

    /**
     * Create an instance of {@link VerticalDatumTypeType }
     * 
     */
    public VerticalDatumTypeType createVerticalDatumTypeType() {
        return new VerticalDatumTypeType();
    }

    /**
     * Create an instance of {@link ConversionTypeType }
     * 
     */
    public ConversionTypeType createConversionTypeType() {
        return new ConversionTypeType();
    }

    /**
     * Create an instance of {@link CoordinateSystemAxisPropertyTypeType }
     * 
     */
    public CoordinateSystemAxisPropertyTypeType createCoordinateSystemAxisPropertyTypeType() {
        return new CoordinateSystemAxisPropertyTypeType();
    }

    /**
     * Create an instance of {@link MultiSolidTypeType }
     * 
     */
    public MultiSolidTypeType createMultiSolidTypeType() {
        return new MultiSolidTypeType();
    }

    /**
     * Create an instance of {@link CylindricalCSTypeType }
     * 
     */
    public CylindricalCSTypeType createCylindricalCSTypeType() {
        return new CylindricalCSTypeType();
    }

    /**
     * Create an instance of {@link TopoPointPropertyTypeType }
     * 
     */
    public TopoPointPropertyTypeType createTopoPointPropertyTypeType() {
        return new TopoPointPropertyTypeType();
    }

    /**
     * Create an instance of {@link FileTypeType }
     * 
     */
    public FileTypeType createFileTypeType() {
        return new FileTypeType();
    }

    /**
     * Create an instance of {@link PointArrayPropertyTypeType }
     * 
     */
    public PointArrayPropertyTypeType createPointArrayPropertyTypeType() {
        return new PointArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link DictionaryTypeType }
     * 
     */
    public DictionaryTypeType createDictionaryTypeType() {
        return new DictionaryTypeType();
    }

    /**
     * Create an instance of {@link ConventionalUnitTypeType }
     * 
     */
    public ConventionalUnitTypeType createConventionalUnitTypeType() {
        return new ConventionalUnitTypeType();
    }

    /**
     * Create an instance of {@link MeasureOrNilReasonListTypeType }
     * 
     */
    public MeasureOrNilReasonListTypeType createMeasureOrNilReasonListTypeType() {
        return new MeasureOrNilReasonListTypeType();
    }

    /**
     * Create an instance of {@link CoordinateSystemAxisTypeType }
     * 
     */
    public CoordinateSystemAxisTypeType createCoordinateSystemAxisTypeType() {
        return new CoordinateSystemAxisTypeType();
    }

    /**
     * Create an instance of {@link MultiSolidPropertyTypeType }
     * 
     */
    public MultiSolidPropertyTypeType createMultiSolidPropertyTypeType() {
        return new MultiSolidPropertyTypeType();
    }

    /**
     * Create an instance of {@link QuantityExtentTypeType }
     * 
     */
    public QuantityExtentTypeType createQuantityExtentTypeType() {
        return new QuantityExtentTypeType();
    }

    /**
     * Create an instance of {@link EngineeringDatumPropertyTypeType }
     * 
     */
    public EngineeringDatumPropertyTypeType createEngineeringDatumPropertyTypeType() {
        return new EngineeringDatumPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeOrdinalEraTypeType }
     * 
     */
    public TimeOrdinalEraTypeType createTimeOrdinalEraTypeType() {
        return new TimeOrdinalEraTypeType();
    }

    /**
     * Create an instance of {@link DirectionPropertyTypeType }
     * 
     */
    public DirectionPropertyTypeType createDirectionPropertyTypeType() {
        return new DirectionPropertyTypeType();
    }

    /**
     * Create an instance of {@link OperationParameterGroupTypeType }
     * 
     */
    public OperationParameterGroupTypeType createOperationParameterGroupTypeType() {
        return new OperationParameterGroupTypeType();
    }

    /**
     * Create an instance of {@link PointTypeType }
     * 
     */
    public PointTypeType createPointTypeType() {
        return new PointTypeType();
    }

    /**
     * Create an instance of {@link ArrayTypeType }
     * 
     */
    public ArrayTypeType createArrayTypeType() {
        return new ArrayTypeType();
    }

    /**
     * Create an instance of {@link CodeOrNilReasonListTypeType }
     * 
     */
    public CodeOrNilReasonListTypeType createCodeOrNilReasonListTypeType() {
        return new CodeOrNilReasonListTypeType();
    }

    /**
     * Create an instance of {@link SingleOperationPropertyTypeType }
     * 
     */
    public SingleOperationPropertyTypeType createSingleOperationPropertyTypeType() {
        return new SingleOperationPropertyTypeType();
    }

    /**
     * Create an instance of {@link MultiGeometryTypeType }
     * 
     */
    public MultiGeometryTypeType createMultiGeometryTypeType() {
        return new MultiGeometryTypeType();
    }

    /**
     * Create an instance of {@link EdgeTypeType }
     * 
     */
    public EdgeTypeType createEdgeTypeType() {
        return new EdgeTypeType();
    }

    /**
     * Create an instance of {@link VerticalDatumPropertyTypeType }
     * 
     */
    public VerticalDatumPropertyTypeType createVerticalDatumPropertyTypeType() {
        return new VerticalDatumPropertyTypeType();
    }

    /**
     * Create an instance of {@link ConcatenatedOperationPropertyTypeType }
     * 
     */
    public ConcatenatedOperationPropertyTypeType createConcatenatedOperationPropertyTypeType() {
        return new ConcatenatedOperationPropertyTypeType();
    }

    /**
     * Create an instance of {@link OperationPropertyTypeType }
     * 
     */
    public OperationPropertyTypeType createOperationPropertyTypeType() {
        return new OperationPropertyTypeType();
    }

    /**
     * Create an instance of {@link NodeTypeType }
     * 
     */
    public NodeTypeType createNodeTypeType() {
        return new NodeTypeType();
    }

    /**
     * Create an instance of {@link OffsetCurveTypeType }
     * 
     */
    public OffsetCurveTypeType createOffsetCurveTypeType() {
        return new OffsetCurveTypeType();
    }

    /**
     * Create an instance of {@link ValuePropertyTypeType }
     * 
     */
    public ValuePropertyTypeType createValuePropertyTypeType() {
        return new ValuePropertyTypeType();
    }

    /**
     * Create an instance of {@link ProcedurePropertyTypeType }
     * 
     */
    public ProcedurePropertyTypeType createProcedurePropertyTypeType() {
        return new ProcedurePropertyTypeType();
    }

    /**
     * Create an instance of {@link TopoComplexTypeType }
     * 
     */
    public TopoComplexTypeType createTopoComplexTypeType() {
        return new TopoComplexTypeType();
    }

    /**
     * Create an instance of {@link CoordinateOperationAccuracy }
     * 
     */
    public CoordinateOperationAccuracy createCoordinateOperationAccuracy() {
        return new CoordinateOperationAccuracy();
    }

    /**
     * Create an instance of {@link DerivationUnitTermTypeType }
     * 
     */
    public DerivationUnitTermTypeType createDerivationUnitTermTypeType() {
        return new DerivationUnitTermTypeType();
    }

    /**
     * Create an instance of {@link ProjectedCRSPropertyTypeType }
     * 
     */
    public ProjectedCRSPropertyTypeType createProjectedCRSPropertyTypeType() {
        return new ProjectedCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link ImageCRSTypeType }
     * 
     */
    public ImageCRSTypeType createImageCRSTypeType() {
        return new ImageCRSTypeType();
    }

    /**
     * Create an instance of {@link SecondDefiningParameterUpperCase }
     * 
     */
    public SecondDefiningParameterUpperCase createSecondDefiningParameterUpperCase() {
        return new SecondDefiningParameterUpperCase();
    }

    /**
     * Create an instance of {@link MultiSurfaceTypeType }
     * 
     */
    public MultiSurfaceTypeType createMultiSurfaceTypeType() {
        return new MultiSurfaceTypeType();
    }

    /**
     * Create an instance of {@link CoordinateOperationPropertyTypeType }
     * 
     */
    public CoordinateOperationPropertyTypeType createCoordinateOperationPropertyTypeType() {
        return new CoordinateOperationPropertyTypeType();
    }

    /**
     * Create an instance of {@link DictionaryEntryTypeType }
     * 
     */
    public DictionaryEntryTypeType createDictionaryEntryTypeType() {
        return new DictionaryEntryTypeType();
    }

    /**
     * Create an instance of {@link TimeEdgeTypeType }
     * 
     */
    public TimeEdgeTypeType createTimeEdgeTypeType() {
        return new TimeEdgeTypeType();
    }

    /**
     * Create an instance of {@link EnvelopeTypeType }
     * 
     */
    public EnvelopeTypeType createEnvelopeTypeType() {
        return new EnvelopeTypeType();
    }

    /**
     * Create an instance of {@link SolidTypeType }
     * 
     */
    public SolidTypeType createSolidTypeType() {
        return new SolidTypeType();
    }

    /**
     * Create an instance of {@link TimeCalendarEraTypeType }
     * 
     */
    public TimeCalendarEraTypeType createTimeCalendarEraTypeType() {
        return new TimeCalendarEraTypeType();
    }

    /**
     * Create an instance of {@link SphericalCSTypeType }
     * 
     */
    public SphericalCSTypeType createSphericalCSTypeType() {
        return new SphericalCSTypeType();
    }

    /**
     * Create an instance of {@link DirectPositionTypeType }
     * 
     */
    public DirectPositionTypeType createDirectPositionTypeType() {
        return new DirectPositionTypeType();
    }

    /**
     * Create an instance of {@link SphericalCSPropertyTypeType }
     * 
     */
    public SphericalCSPropertyTypeType createSphericalCSPropertyTypeType() {
        return new SphericalCSPropertyTypeType();
    }

    /**
     * Create an instance of {@link VectorTypeType }
     * 
     */
    public VectorTypeType createVectorTypeType() {
        return new VectorTypeType();
    }

    /**
     * Create an instance of {@link FaceTypeType }
     * 
     */
    public FaceTypeType createFaceTypeType() {
        return new FaceTypeType();
    }

    /**
     * Create an instance of {@link DatumPropertyTypeType }
     * 
     */
    public DatumPropertyTypeType createDatumPropertyTypeType() {
        return new DatumPropertyTypeType();
    }

    /**
     * Create an instance of {@link CoordinatesTypeType }
     * 
     */
    public CoordinatesTypeType createCoordinatesTypeType() {
        return new CoordinatesTypeType();
    }

    /**
     * Create an instance of {@link GeodeticDatumTypeType }
     * 
     */
    public GeodeticDatumTypeType createGeodeticDatumTypeType() {
        return new GeodeticDatumTypeType();
    }

    /**
     * Create an instance of {@link RingTypeType }
     * 
     */
    public RingTypeType createRingTypeType() {
        return new RingTypeType();
    }

    /**
     * Create an instance of {@link TemporalCRSPropertyTypeType }
     * 
     */
    public TemporalCRSPropertyTypeType createTemporalCRSPropertyTypeType() {
        return new TemporalCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link ConcatenatedOperationTypeType }
     * 
     */
    public ConcatenatedOperationTypeType createConcatenatedOperationTypeType() {
        return new ConcatenatedOperationTypeType();
    }

    /**
     * Create an instance of {@link TopoCurvePropertyTypeType }
     * 
     */
    public TopoCurvePropertyTypeType createTopoCurvePropertyTypeType() {
        return new TopoCurvePropertyTypeType();
    }

    /**
     * Create an instance of {@link GridFunctionTypeType }
     * 
     */
    public GridFunctionTypeType createGridFunctionTypeType() {
        return new GridFunctionTypeType();
    }

    /**
     * Create an instance of {@link TimeNodeTypeType }
     * 
     */
    public TimeNodeTypeType createTimeNodeTypeType() {
        return new TimeNodeTypeType();
    }

    /**
     * Create an instance of {@link ArcByBulgeTypeType }
     * 
     */
    public ArcByBulgeTypeType createArcByBulgeTypeType() {
        return new ArcByBulgeTypeType();
    }

    /**
     * Create an instance of {@link ArcStringByBulgeTypeType }
     * 
     */
    public ArcStringByBulgeTypeType createArcStringByBulgeTypeType() {
        return new ArcStringByBulgeTypeType();
    }

    /**
     * Create an instance of {@link DerivedUnitTypeType }
     * 
     */
    public DerivedUnitTypeType createDerivedUnitTypeType() {
        return new DerivedUnitTypeType();
    }

    /**
     * Create an instance of {@link EllipsoidPropertyTypeType }
     * 
     */
    public EllipsoidPropertyTypeType createEllipsoidPropertyTypeType() {
        return new EllipsoidPropertyTypeType();
    }

    /**
     * Create an instance of {@link AffinePlacementTypeType }
     * 
     */
    public AffinePlacementTypeType createAffinePlacementTypeType() {
        return new AffinePlacementTypeType();
    }

    /**
     * Create an instance of {@link CodeWithAuthorityTypeType }
     * 
     */
    public CodeWithAuthorityTypeType createCodeWithAuthorityTypeType() {
        return new CodeWithAuthorityTypeType();
    }

    /**
     * Create an instance of {@link InlinePropertyTypeType }
     * 
     */
    public InlinePropertyTypeType createInlinePropertyTypeType() {
        return new InlinePropertyTypeType();
    }

    /**
     * Create an instance of {@link PolygonTypeType }
     * 
     */
    public PolygonTypeType createPolygonTypeType() {
        return new PolygonTypeType();
    }

    /**
     * Create an instance of {@link OperationParameterTypeType }
     * 
     */
    public OperationParameterTypeType createOperationParameterTypeType() {
        return new OperationParameterTypeType();
    }

    /**
     * Create an instance of {@link TemporalDatumTypeType }
     * 
     */
    public TemporalDatumTypeType createTemporalDatumTypeType() {
        return new TemporalDatumTypeType();
    }

    /**
     * Create an instance of {@link FormulaCitation }
     * 
     */
    public FormulaCitation createFormulaCitation() {
        return new FormulaCitation();
    }

    /**
     * Create an instance of {@link EnvelopeWithTimePeriodTypeType }
     * 
     */
    public EnvelopeWithTimePeriodTypeType createEnvelopeWithTimePeriodTypeType() {
        return new EnvelopeWithTimePeriodTypeType();
    }

    /**
     * Create an instance of {@link MetaDataPropertyTypeType }
     * 
     */
    public MetaDataPropertyTypeType createMetaDataPropertyTypeType() {
        return new MetaDataPropertyTypeType();
    }

    /**
     * Create an instance of {@link CompositeSurfaceTypeType }
     * 
     */
    public CompositeSurfaceTypeType createCompositeSurfaceTypeType() {
        return new CompositeSurfaceTypeType();
    }

    /**
     * Create an instance of {@link ObliqueCartesianCSTypeType }
     * 
     */
    public ObliqueCartesianCSTypeType createObliqueCartesianCSTypeType() {
        return new ObliqueCartesianCSTypeType();
    }

    /**
     * Create an instance of {@link DataBlockTypeType }
     * 
     */
    public DataBlockTypeType createDataBlockTypeType() {
        return new DataBlockTypeType();
    }

    /**
     * Create an instance of {@link ShellTypeType }
     * 
     */
    public ShellTypeType createShellTypeType() {
        return new ShellTypeType();
    }

    /**
     * Create an instance of {@link GeneralTransformationPropertyTypeType }
     * 
     */
    public GeneralTransformationPropertyTypeType createGeneralTransformationPropertyTypeType() {
        return new GeneralTransformationPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeCalendarTypeType }
     * 
     */
    public TimeCalendarTypeType createTimeCalendarTypeType() {
        return new TimeCalendarTypeType();
    }

    /**
     * Create an instance of {@link TransformationPropertyTypeType }
     * 
     */
    public TransformationPropertyTypeType createTransformationPropertyTypeType() {
        return new TransformationPropertyTypeType();
    }

    /**
     * Create an instance of {@link GeographicCRSPropertyTypeType }
     * 
     */
    public GeographicCRSPropertyTypeType createGeographicCRSPropertyTypeType() {
        return new GeographicCRSPropertyTypeType();
    }

    /**
     * Create an instance of {@link LineStringTypeType }
     * 
     */
    public LineStringTypeType createLineStringTypeType() {
        return new LineStringTypeType();
    }

    /**
     * Create an instance of {@link PolygonPatchTypeType }
     * 
     */
    public PolygonPatchTypeType createPolygonPatchTypeType() {
        return new PolygonPatchTypeType();
    }

    /**
     * Create an instance of {@link RangeSetTypeType }
     * 
     */
    public RangeSetTypeType createRangeSetTypeType() {
        return new RangeSetTypeType();
    }

    /**
     * Create an instance of {@link EllipsoidTypeType }
     * 
     */
    public EllipsoidTypeType createEllipsoidTypeType() {
        return new EllipsoidTypeType();
    }

    /**
     * Create an instance of {@link GenericMetaDataTypeType }
     * 
     */
    public GenericMetaDataTypeType createGenericMetaDataTypeType() {
        return new GenericMetaDataTypeType();
    }

    /**
     * Create an instance of {@link ParameterValueGroupTypeType }
     * 
     */
    public ParameterValueGroupTypeType createParameterValueGroupTypeType() {
        return new ParameterValueGroupTypeType();
    }

    /**
     * Create an instance of {@link TriangleTypeType }
     * 
     */
    public TriangleTypeType createTriangleTypeType() {
        return new TriangleTypeType();
    }

    /**
     * Create an instance of {@link RectangleTypeType }
     * 
     */
    public RectangleTypeType createRectangleTypeType() {
        return new RectangleTypeType();
    }

    /**
     * Create an instance of {@link DegreesTypeType }
     * 
     */
    public DegreesTypeType createDegreesTypeType() {
        return new DegreesTypeType();
    }

    /**
     * Create an instance of {@link CartesianCSTypeType }
     * 
     */
    public CartesianCSTypeType createCartesianCSTypeType() {
        return new CartesianCSTypeType();
    }

    /**
     * Create an instance of {@link TimePeriodTypeType }
     * 
     */
    public TimePeriodTypeType createTimePeriodTypeType() {
        return new TimePeriodTypeType();
    }

    /**
     * Create an instance of {@link CurveTypeType }
     * 
     */
    public CurveTypeType createCurveTypeType() {
        return new CurveTypeType();
    }

    /**
     * Create an instance of {@link PassThroughOperationPropertyTypeType }
     * 
     */
    public PassThroughOperationPropertyTypeType createPassThroughOperationPropertyTypeType() {
        return new PassThroughOperationPropertyTypeType();
    }

    /**
     * Create an instance of {@link GeocentricCRSTypeType }
     * 
     */
    public GeocentricCRSTypeType createGeocentricCRSTypeType() {
        return new GeocentricCRSTypeType();
    }

    /**
     * Create an instance of {@link ConversionPropertyTypeType }
     * 
     */
    public ConversionPropertyTypeType createConversionPropertyTypeType() {
        return new ConversionPropertyTypeType();
    }

    /**
     * Create an instance of {@link ConeTypeType }
     * 
     */
    public ConeTypeType createConeTypeType() {
        return new ConeTypeType();
    }

    /**
     * Create an instance of {@link DomainOfValidity }
     * 
     */
    public DomainOfValidity createDomainOfValidity() {
        return new DomainOfValidity();
    }

    /**
     * Create an instance of {@link PolarCSTypeType }
     * 
     */
    public PolarCSTypeType createPolarCSTypeType() {
        return new PolarCSTypeType();
    }

    /**
     * Create an instance of {@link ProjectedCRSTypeType }
     * 
     */
    public ProjectedCRSTypeType createProjectedCRSTypeType() {
        return new ProjectedCRSTypeType();
    }

    /**
     * Create an instance of {@link MultiPointTypeType }
     * 
     */
    public MultiPointTypeType createMultiPointTypeType() {
        return new MultiPointTypeType();
    }

    /**
     * Create an instance of {@link TransformationTypeType }
     * 
     */
    public TransformationTypeType createTransformationTypeType() {
        return new TransformationTypeType();
    }

    /**
     * Create an instance of {@link OrientableSurfaceTypeType }
     * 
     */
    public OrientableSurfaceTypeType createOrientableSurfaceTypeType() {
        return new OrientableSurfaceTypeType();
    }

    /**
     * Create an instance of {@link TopoPrimitiveArrayAssociationTypeType }
     * 
     */
    public TopoPrimitiveArrayAssociationTypeType createTopoPrimitiveArrayAssociationTypeType() {
        return new TopoPrimitiveArrayAssociationTypeType();
    }

    /**
     * Create an instance of {@link DMSAngleTypeType }
     * 
     */
    public DMSAngleTypeType createDMSAngleTypeType() {
        return new DMSAngleTypeType();
    }

    /**
     * Create an instance of {@link CubicSplineTypeType }
     * 
     */
    public CubicSplineTypeType createCubicSplineTypeType() {
        return new CubicSplineTypeType();
    }

    /**
     * Create an instance of {@link CategoryExtentTypeType }
     * 
     */
    public CategoryExtentTypeType createCategoryExtentTypeType() {
        return new CategoryExtentTypeType();
    }

    /**
     * Create an instance of {@link HistoryPropertyTypeType }
     * 
     */
    public HistoryPropertyTypeType createHistoryPropertyTypeType() {
        return new HistoryPropertyTypeType();
    }

    /**
     * Create an instance of {@link OrientableCurveTypeType }
     * 
     */
    public OrientableCurveTypeType createOrientableCurveTypeType() {
        return new OrientableCurveTypeType();
    }

    /**
     * Create an instance of {@link EngineeringDatumTypeType }
     * 
     */
    public EngineeringDatumTypeType createEngineeringDatumTypeType() {
        return new EngineeringDatumTypeType();
    }

    /**
     * Create an instance of {@link TopoSurfacePropertyTypeType }
     * 
     */
    public TopoSurfacePropertyTypeType createTopoSurfacePropertyTypeType() {
        return new TopoSurfacePropertyTypeType();
    }

    /**
     * Create an instance of {@link CompositeCurveTypeType }
     * 
     */
    public CompositeCurveTypeType createCompositeCurveTypeType() {
        return new CompositeCurveTypeType();
    }

    /**
     * Create an instance of {@link AffineCSTypeType }
     * 
     */
    public AffineCSTypeType createAffineCSTypeType() {
        return new AffineCSTypeType();
    }

    /**
     * Create an instance of {@link MultiGeometryPropertyTypeType }
     * 
     */
    public MultiGeometryPropertyTypeType createMultiGeometryPropertyTypeType() {
        return new MultiGeometryPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimePositionTypeType }
     * 
     */
    public TimePositionTypeType createTimePositionTypeType() {
        return new TimePositionTypeType();
    }

    /**
     * Create an instance of {@link BagTypeType }
     * 
     */
    public BagTypeType createBagTypeType() {
        return new BagTypeType();
    }

    /**
     * Create an instance of {@link FeatureCollectionTypeType }
     * 
     */
    public FeatureCollectionTypeType createFeatureCollectionTypeType() {
        return new FeatureCollectionTypeType();
    }

    /**
     * Create an instance of {@link MeasureListTypeType }
     * 
     */
    public MeasureListTypeType createMeasureListTypeType() {
        return new MeasureListTypeType();
    }

    /**
     * Create an instance of {@link ScaleTypeType }
     * 
     */
    public ScaleTypeType createScaleTypeType() {
        return new ScaleTypeType();
    }

    /**
     * Create an instance of {@link TimeCalendarEraPropertyTypeType }
     * 
     */
    public TimeCalendarEraPropertyTypeType createTimeCalendarEraPropertyTypeType() {
        return new TimeCalendarEraPropertyTypeType();
    }

    /**
     * Create an instance of {@link TopoSolidPropertyTypeType }
     * 
     */
    public TopoSolidPropertyTypeType createTopoSolidPropertyTypeType() {
        return new TopoSolidPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeCalendarPropertyTypeType }
     * 
     */
    public TimeCalendarPropertyTypeType createTimeCalendarPropertyTypeType() {
        return new TimeCalendarPropertyTypeType();
    }

    /**
     * Create an instance of {@link CategoryPropertyTypeType }
     * 
     */
    public CategoryPropertyTypeType createCategoryPropertyTypeType() {
        return new CategoryPropertyTypeType();
    }

    /**
     * Create an instance of {@link CodeListTypeType }
     * 
     */
    public CodeListTypeType createCodeListTypeType() {
        return new CodeListTypeType();
    }

    /**
     * Create an instance of {@link GridEnvelopeTypeType }
     * 
     */
    public GridEnvelopeTypeType createGridEnvelopeTypeType() {
        return new GridEnvelopeTypeType();
    }

    /**
     * Create an instance of {@link DirectionVectorTypeType }
     * 
     */
    public DirectionVectorTypeType createDirectionVectorTypeType() {
        return new DirectionVectorTypeType();
    }

    /**
     * Create an instance of {@link GeometricPrimitivePropertyTypeType }
     * 
     */
    public GeometricPrimitivePropertyTypeType createGeometricPrimitivePropertyTypeType() {
        return new GeometricPrimitivePropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeOrdinalEraPropertyTypeType }
     * 
     */
    public TimeOrdinalEraPropertyTypeType createTimeOrdinalEraPropertyTypeType() {
        return new TimeOrdinalEraPropertyTypeType();
    }

    /**
     * Create an instance of {@link DefinitionBaseTypeType }
     * 
     */
    public DefinitionBaseTypeType createDefinitionBaseTypeType() {
        return new DefinitionBaseTypeType();
    }

    /**
     * Create an instance of {@link TimeNodePropertyTypeType }
     * 
     */
    public TimeNodePropertyTypeType createTimeNodePropertyTypeType() {
        return new TimeNodePropertyTypeType();
    }

    /**
     * Create an instance of {@link GridLimitsTypeType }
     * 
     */
    public GridLimitsTypeType createGridLimitsTypeType() {
        return new GridLimitsTypeType();
    }

    /**
     * Create an instance of {@link NodePropertyTypeType }
     * 
     */
    public NodePropertyTypeType createNodePropertyTypeType() {
        return new NodePropertyTypeType();
    }

    /**
     * Create an instance of {@link GeometricComplexPropertyTypeType }
     * 
     */
    public GeometricComplexPropertyTypeType createGeometricComplexPropertyTypeType() {
        return new GeometricComplexPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeClockPropertyTypeType }
     * 
     */
    public TimeClockPropertyTypeType createTimeClockPropertyTypeType() {
        return new TimeClockPropertyTypeType();
    }

    /**
     * Create an instance of {@link DirectionDescriptionTypeType }
     * 
     */
    public DirectionDescriptionTypeType createDirectionDescriptionTypeType() {
        return new DirectionDescriptionTypeType();
    }

    /**
     * Create an instance of {@link AreaTypeType }
     * 
     */
    public AreaTypeType createAreaTypeType() {
        return new AreaTypeType();
    }

    /**
     * Create an instance of {@link FormulaTypeType }
     * 
     */
    public FormulaTypeType createFormulaTypeType() {
        return new FormulaTypeType();
    }

    /**
     * Create an instance of {@link LineStringSegmentArrayPropertyTypeType }
     * 
     */
    public LineStringSegmentArrayPropertyTypeType createLineStringSegmentArrayPropertyTypeType() {
        return new LineStringSegmentArrayPropertyTypeType();
    }

    /**
     * Create an instance of {@link RingPropertyTypeType }
     * 
     */
    public RingPropertyTypeType createRingPropertyTypeType() {
        return new RingPropertyTypeType();
    }

    /**
     * Create an instance of {@link FaceOrTopoSolidPropertyTypeType }
     * 
     */
    public FaceOrTopoSolidPropertyTypeType createFaceOrTopoSolidPropertyTypeType() {
        return new FaceOrTopoSolidPropertyTypeType();
    }

    /**
     * Create an instance of {@link AngleChoiceTypeType }
     * 
     */
    public AngleChoiceTypeType createAngleChoiceTypeType() {
        return new AngleChoiceTypeType();
    }

    /**
     * Create an instance of {@link TimePeriodPropertyTypeType }
     * 
     */
    public TimePeriodPropertyTypeType createTimePeriodPropertyTypeType() {
        return new TimePeriodPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeEdgePropertyTypeType }
     * 
     */
    public TimeEdgePropertyTypeType createTimeEdgePropertyTypeType() {
        return new TimeEdgePropertyTypeType();
    }

    /**
     * Create an instance of {@link GridLengthTypeType }
     * 
     */
    public GridLengthTypeType createGridLengthTypeType() {
        return new GridLengthTypeType();
    }

    /**
     * Create an instance of {@link BooleanPropertyTypeType }
     * 
     */
    public BooleanPropertyTypeType createBooleanPropertyTypeType() {
        return new BooleanPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeTopologyComplexPropertyTypeType }
     * 
     */
    public TimeTopologyComplexPropertyTypeType createTimeTopologyComplexPropertyTypeType() {
        return new TimeTopologyComplexPropertyTypeType();
    }

    /**
     * Create an instance of {@link RelatedTimeTypeType }
     * 
     */
    public RelatedTimeTypeType createRelatedTimeTypeType() {
        return new RelatedTimeTypeType();
    }

    /**
     * Create an instance of {@link LinearRingPropertyTypeType }
     * 
     */
    public LinearRingPropertyTypeType createLinearRingPropertyTypeType() {
        return new LinearRingPropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeTopologyPrimitivePropertyTypeType }
     * 
     */
    public TimeTopologyPrimitivePropertyTypeType createTimeTopologyPrimitivePropertyTypeType() {
        return new TimeTopologyPrimitivePropertyTypeType();
    }

    /**
     * Create an instance of {@link SpeedTypeType }
     * 
     */
    public SpeedTypeType createSpeedTypeType() {
        return new SpeedTypeType();
    }

    /**
     * Create an instance of {@link SequenceRuleTypeType }
     * 
     */
    public SequenceRuleTypeType createSequenceRuleTypeType() {
        return new SequenceRuleTypeType();
    }

    /**
     * Create an instance of {@link KnotPropertyTypeType }
     * 
     */
    public KnotPropertyTypeType createKnotPropertyTypeType() {
        return new KnotPropertyTypeType();
    }

    /**
     * Create an instance of {@link NodeOrEdgePropertyTypeType }
     * 
     */
    public NodeOrEdgePropertyTypeType createNodeOrEdgePropertyTypeType() {
        return new NodeOrEdgePropertyTypeType();
    }

    /**
     * Create an instance of {@link TimeTypeType }
     * 
     */
    public TimeTypeType createTimeTypeType() {
        return new TimeTypeType();
    }

    /**
     * Create an instance of {@link VolumeTypeType }
     * 
     */
    public VolumeTypeType createVolumeTypeType() {
        return new VolumeTypeType();
    }

    /**
     * Create an instance of {@link CountPropertyTypeType }
     * 
     */
    public CountPropertyTypeType createCountPropertyTypeType() {
        return new CountPropertyTypeType();
    }

    /**
     * Create an instance of {@link KnotTypeType }
     * 
     */
    public KnotTypeType createKnotTypeType() {
        return new KnotTypeType();
    }

    /**
     * Create an instance of {@link TimeInstantPropertyTypeType }
     * 
     */
    public TimeInstantPropertyTypeType createTimeInstantPropertyTypeType() {
        return new TimeInstantPropertyTypeType();
    }

    /**
     * Create an instance of {@link QuantityPropertyTypeType }
     * 
     */
    public QuantityPropertyTypeType createQuantityPropertyTypeType() {
        return new QuantityPropertyTypeType();
    }

    /**
     * Create an instance of {@link ShellPropertyTypeType }
     * 
     */
    public ShellPropertyTypeType createShellPropertyTypeType() {
        return new ShellPropertyTypeType();
    }

    /**
     * Create an instance of {@link AbstractGriddedSurfaceTypeType.Rows.Row }
     * 
     */
    public AbstractGriddedSurfaceTypeType.Rows.Row createAbstractGriddedSurfaceTypeTypeRowsRow() {
        return new AbstractGriddedSurfaceTypeType.Rows.Row();
    }

    /**
     * Create an instance of {@link ClothoidTypeType.RefLocation }
     * 
     */
    public ClothoidTypeType.RefLocation createClothoidTypeTypeRefLocation() {
        return new ClothoidTypeType.RefLocation();
    }

    /**
     * Create an instance of {@link TinTypeType.ControlPoint }
     * 
     */
    public TinTypeType.ControlPoint createTinTypeTypeControlPoint() {
        return new TinTypeType.ControlPoint();
    }

    /**
     * Create an instance of {@link CountList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CountList", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValueList")
    public CountList createCountList(List<String> value) {
        return new CountList(((List<String> ) value));
    }

    /**
     * Create an instance of {@link SuperComplex }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "superComplex")
    public SuperComplex createSuperComplex(TopoComplexPropertyTypeType value) {
        return new SuperComplex(value);
    }

    /**
     * Create an instance of {@link DerivationUnitTerm }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "derivationUnitTerm")
    public DerivationUnitTerm createDerivationUnitTerm(DerivationUnitTermTypeType value) {
        return new DerivationUnitTerm(value);
    }

    /**
     * Create an instance of {@link ProjectedCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "projectedCRSRef")
    public ProjectedCRSRef createProjectedCRSRef(ProjectedCRSPropertyTypeType value) {
        return new ProjectedCRSRef(value);
    }

    /**
     * Create an instance of {@link BaseSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "baseSurface")
    public BaseSurface createBaseSurface(SurfacePropertyTypeType value) {
        return new BaseSurface(value);
    }

    /**
     * Create an instance of {@link CurveMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "curveMember")
    public CurveMember createCurveMember(CurvePropertyTypeType value) {
        return new CurveMember(value);
    }

    /**
     * Create an instance of {@link Patches }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "patches")
    public Patches createPatches(SurfacePatchArrayPropertyTypeType value) {
        return new Patches(value);
    }

    /**
     * Create an instance of {@link VerticalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "verticalCS")
    public VerticalCS createVerticalCS(VerticalCSPropertyTypeType value) {
        return new VerticalCS(value);
    }

    /**
     * Create an instance of {@link TopoComplex }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TopoComplex", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTopology")
    public TopoComplex createTopoComplex(TopoComplexTypeType value) {
        return new TopoComplex(value);
    }

    /**
     * Create an instance of {@link Using }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "using")
    public Using createUsing(ProcedurePropertyTypeType value) {
        return new Using(value);
    }

    /**
     * Create an instance of {@link ImageCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ImageCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public ImageCRS createImageCRS(ImageCRSTypeType value) {
        return new ImageCRS(value);
    }

    /**
     * Create an instance of {@link Arc }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Arc", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "ArcString")
    public Arc createArc(ArcTypeType value) {
        return new Arc(value);
    }

    /**
     * Create an instance of {@link OffsetCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "OffsetCurve", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public OffsetCurve createOffsetCurve(OffsetCurveTypeType value) {
        return new OffsetCurve(value);
    }

    /**
     * Create an instance of {@link ValueProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "valueProperty")
    public ValueProperty createValueProperty(ValuePropertyTypeType value) {
        return new ValueProperty(value);
    }

    /**
     * Create an instance of {@link UsesTimeCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesTimeCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "timeCS")
    public UsesTimeCS createUsesTimeCS(TimeCSPropertyTypeType value) {
        return new UsesTimeCS(value);
    }

    /**
     * Create an instance of {@link OperationRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "operationRef")
    public OperationRef createOperationRef(OperationPropertyTypeType value) {
        return new OperationRef(value);
    }

    /**
     * Create an instance of {@link ConversionToPreferredUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "conversionToPreferredUnit")
    public ConversionToPreferredUnit createConversionToPreferredUnit(ConversionToPreferredUnitTypeType value) {
        return new ConversionToPreferredUnit(value);
    }

    /**
     * Create an instance of {@link ConcatenatedOperationRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "concatenatedOperationRef")
    public ConcatenatedOperationRef createConcatenatedOperationRef(ConcatenatedOperationPropertyTypeType value) {
        return new ConcatenatedOperationRef(value);
    }

    /**
     * Create an instance of {@link Node }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Node", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTopoPrimitive")
    public Node createNode(NodeTypeType value) {
        return new Node(value);
    }

    /**
     * Create an instance of {@link SubComplex }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "subComplex")
    public SubComplex createSubComplex(TopoComplexPropertyTypeType value) {
        return new SubComplex(value);
    }

    /**
     * Create an instance of {@link QuantityType }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "quantityType")
    public QuantityType createQuantityType(StringOrRefTypeType value) {
        return new QuantityType(value);
    }

    /**
     * Create an instance of {@link UsesVerticalDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesVerticalDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "verticalDatum")
    public UsesVerticalDatum createUsesVerticalDatum(VerticalDatumPropertyTypeType value) {
        return new UsesVerticalDatum(value);
    }

    /**
     * Create an instance of {@link TargetElement }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "targetElement")
    public TargetElement createTargetElement(String value) {
        return new TargetElement(value);
    }

    /**
     * Create an instance of {@link DomainSet }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "domainSet")
    public DomainSet createDomainSet(DomainSetTypeType value) {
        return new DomainSet(value);
    }

    /**
     * Create an instance of {@link LocationReference }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "locationReference")
    public LocationReference createLocationReference(ReferenceTypeType value) {
        return new LocationReference(value);
    }

    /**
     * Create an instance of {@link IntegerValueList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "integerValueList")
    public IntegerValueList createIntegerValueList(List<BigInteger> value) {
        return new IntegerValueList(((List<BigInteger> ) value));
    }

    /**
     * Create an instance of {@link Coordinates }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "coordinates")
    public Coordinates createCoordinates(CoordinatesTypeType value) {
        return new Coordinates(value);
    }

    /**
     * Create an instance of {@link GeodeticDatumUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GeodeticDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDatum")
    public GeodeticDatumUpperCase createGeodeticDatumUpperCase(GeodeticDatumTypeType value) {
        return new GeodeticDatumUpperCase(value);
    }

    /**
     * Create an instance of {@link CountExtent }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CountExtent", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractValue")
    public CountExtent createCountExtent(List<String> value) {
        return new CountExtent(((List<String> ) value));
    }

    /**
     * Create an instance of {@link MultiCenterLineOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiCenterLineOf")
    public MultiCenterLineOf createMultiCenterLineOf(MultiCurvePropertyTypeType value) {
        return new MultiCenterLineOf(value);
    }

    /**
     * Create an instance of {@link MultiPointProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiPointProperty")
    public MultiPointProperty createMultiPointProperty(MultiPointPropertyTypeType value) {
        return new MultiPointProperty(value);
    }

    /**
     * Create an instance of {@link DatumRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "datumRef")
    public DatumRef createDatumRef(DatumPropertyTypeType value) {
        return new DatumRef(value);
    }

    /**
     * Create an instance of {@link AbstractGeneralDerivedCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeneralDerivedCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public AbstractGeneralDerivedCRS createAbstractGeneralDerivedCRS(AbstractGeneralDerivedCRSTypeType value) {
        return new AbstractGeneralDerivedCRS(value);
    }

    /**
     * Create an instance of {@link UsesTemporalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesTemporalCS")
    public UsesTemporalCS createUsesTemporalCS(TemporalCSPropertyTypeType value) {
        return new UsesTemporalCS(value);
    }

    /**
     * Create an instance of {@link TopoCurveProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "topoCurveProperty")
    public TopoCurveProperty createTopoCurveProperty(TopoCurvePropertyTypeType value) {
        return new TopoCurveProperty(value);
    }

    /**
     * Create an instance of {@link GridFunction }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GridFunction", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public GridFunction createGridFunction(GridFunctionTypeType value) {
        return new GridFunction(value);
    }

    /**
     * Create an instance of {@link EdgeOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "edgeOf")
    public EdgeOf createEdgeOf(CurvePropertyTypeType value) {
        return new EdgeOf(value);
    }

    /**
     * Create an instance of {@link ConcatenatedOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ConcatenatedOperation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateOperation")
    public ConcatenatedOperation createConcatenatedOperation(ConcatenatedOperationTypeType value) {
        return new ConcatenatedOperation(value);
    }

    /**
     * Create an instance of {@link TemporalCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "temporalCRSRef")
    public TemporalCRSRef createTemporalCRSRef(TemporalCRSPropertyTypeType value) {
        return new TemporalCRSRef(value);
    }

    /**
     * Create an instance of {@link Ring }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Ring", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractRing")
    public Ring createRing(RingTypeType value) {
        return new Ring(value);
    }

    /**
     * Create an instance of {@link Envelope }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Envelope", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public Envelope createEnvelope(EnvelopeTypeType value) {
        return new Envelope(value);
    }

    /**
     * Create an instance of {@link DefinitionCollection }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DefinitionCollection", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public DefinitionCollection createDefinitionCollection(DictionaryTypeType value) {
        return new DefinitionCollection(value);
    }

    /**
     * Create an instance of {@link Solid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Solid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSolid")
    public Solid createSolid(SolidTypeType value) {
        return new Solid(value);
    }

    /**
     * Create an instance of {@link RealizationEpoch }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "realizationEpoch")
    public RealizationEpoch createRealizationEpoch(XMLGregorianCalendar value) {
        return new RealizationEpoch(value);
    }

    /**
     * Create an instance of {@link DictionaryEntry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "dictionaryEntry")
    public DictionaryEntry createDictionaryEntry(DictionaryEntryTypeType value) {
        return new DictionaryEntry(value);
    }

    /**
     * Create an instance of {@link TimeEdge }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeEdge", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeTopologyPrimitive")
    public TimeEdge createTimeEdge(TimeEdgeTypeType value) {
        return new TimeEdge(value);
    }

    /**
     * Create an instance of {@link OperationParameterRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "operationParameterRef")
    public OperationParameterRef createOperationParameterRef(OperationParameterPropertyTypeType value) {
        return new OperationParameterRef(value);
    }

    /**
     * Create an instance of {@link MultiSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricAggregate")
    public MultiSurface createMultiSurface(MultiSurfaceTypeType value) {
        return new MultiSurface(value);
    }

    /**
     * Create an instance of {@link UsesSingleOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesSingleOperation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "coordOperation")
    public UsesSingleOperation createUsesSingleOperation(CoordinateOperationPropertyTypeType value) {
        return new UsesSingleOperation(value);
    }

    /**
     * Create an instance of {@link Face }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Face", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTopoPrimitive")
    public Face createFace(FaceTypeType value) {
        return new Face(value);
    }

    /**
     * Create an instance of {@link SphericalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "sphericalCS")
    public SphericalCS createSphericalCS(SphericalCSPropertyTypeType value) {
        return new SphericalCS(value);
    }

    /**
     * Create an instance of {@link Vector }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "vector")
    public Vector createVector(VectorTypeType value) {
        return new Vector(value);
    }

    /**
     * Create an instance of {@link Pos }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "pos")
    public Pos createPos(DirectPositionTypeType value) {
        return new Pos(value);
    }

    /**
     * Create an instance of {@link MultiPointCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiPointCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDiscreteCoverage")
    public MultiPointCoverage createMultiPointCoverage(DiscreteCoverageTypeType value) {
        return new MultiPointCoverage(value);
    }

    /**
     * Create an instance of {@link DefinitionRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "definitionRef")
    public DefinitionRef createDefinitionRef(ReferenceTypeType value) {
        return new DefinitionRef(value);
    }

    /**
     * Create an instance of {@link AbstractParametricCurveSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractParametricCurveSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurfacePatch")
    public AbstractParametricCurveSurface createAbstractParametricCurveSurface(AbstractParametricCurveSurfaceTypeType value) {
        return new AbstractParametricCurveSurface(value);
    }

    /**
     * Create an instance of {@link TimeCalendarEra }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeCalendarEra")
    public TimeCalendarEra createTimeCalendarEra(TimeCalendarEraTypeType value) {
        return new TimeCalendarEra(value);
    }

    /**
     * Create an instance of {@link UsesGeodeticDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesGeodeticDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "geodeticDatum")
    public UsesGeodeticDatum createUsesGeodeticDatum(GeodeticDatumPropertyTypeType value) {
        return new UsesGeodeticDatum(value);
    }

    /**
     * Create an instance of {@link SphericalCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "SphericalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public SphericalCSUpperCase createSphericalCSUpperCase(SphericalCSTypeType value) {
        return new SphericalCSUpperCase(value);
    }

    /**
     * Create an instance of {@link BaseCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "baseCurve")
    public BaseCurve createBaseCurve(CurvePropertyTypeType value) {
        return new BaseCurve(value);
    }

    /**
     * Create an instance of {@link VerticalDatumRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "verticalDatumRef")
    public VerticalDatumRef createVerticalDatumRef(VerticalDatumPropertyTypeType value) {
        return new VerticalDatumRef(value);
    }

    /**
     * Create an instance of {@link VerticalDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "verticalDatum")
    public VerticalDatum createVerticalDatum(VerticalDatumPropertyTypeType value) {
        return new VerticalDatum(value);
    }

    /**
     * Create an instance of {@link OperationParameterUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "OperationParameter", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralOperationParameter")
    public OperationParameterUpperCase createOperationParameterUpperCase(OperationParameterTypeType value) {
        return new OperationParameterUpperCase(value);
    }

    /**
     * Create an instance of {@link AbstractGeneralConversion }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeneralConversion", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractOperation")
    public AbstractGeneralConversion createAbstractGeneralConversion(AbstractGeneralConversionTypeType value) {
        return new AbstractGeneralConversion(value);
    }

    /**
     * Create an instance of {@link AbstractCurveSegment }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractCurveSegment", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public AbstractCurveSegment createAbstractCurveSegment(AbstractCurveSegmentTypeType value) {
        return new AbstractCurveSegment(value);
    }

    /**
     * Create an instance of {@link EnvelopeWithTimePeriod }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "EnvelopeWithTimePeriod", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Envelope")
    public EnvelopeWithTimePeriod createEnvelopeWithTimePeriod(EnvelopeWithTimePeriodTypeType value) {
        return new EnvelopeWithTimePeriod(value);
    }

    /**
     * Create an instance of {@link ArcStringByBulge }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ArcStringByBulge", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public ArcStringByBulge createArcStringByBulge(ArcStringByBulgeTypeType value) {
        return new ArcStringByBulge(value);
    }

    /**
     * Create an instance of {@link Observation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Observation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractFeature")
    public Observation createObservation(ObservationTypeType value) {
        return new Observation(value);
    }

    /**
     * Create an instance of {@link Name }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "name")
    public Name createName(CodeTypeType value) {
        return new Name(value);
    }

    /**
     * Create an instance of {@link MaximumOccurs }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "maximumOccurs")
    public MaximumOccurs createMaximumOccurs(BigInteger value) {
        return new MaximumOccurs(value);
    }

    /**
     * Create an instance of {@link TemporalDatumUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TemporalDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDatum")
    public TemporalDatumUpperCase createTemporalDatumUpperCase(TemporalDatumTypeType value) {
        return new TemporalDatumUpperCase(value);
    }

    /**
     * Create an instance of {@link Measure }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "measure")
    public Measure createMeasure(MeasureTypeType value) {
        return new Measure(value);
    }

    /**
     * Create an instance of {@link ArcByBulge }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ArcByBulge", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "ArcStringByBulge")
    public ArcByBulge createArcByBulge(ArcByBulgeTypeType value) {
        return new ArcByBulge(value);
    }

    /**
     * Create an instance of {@link UsesOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesOperation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "coordOperation")
    public UsesOperation createUsesOperation(CoordinateOperationPropertyTypeType value) {
        return new UsesOperation(value);
    }

    /**
     * Create an instance of {@link TimeNode }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeNode", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeTopologyPrimitive")
    public TimeNode createTimeNode(TimeNodeTypeType value) {
        return new TimeNode(value);
    }

    /**
     * Create an instance of {@link MultiPointDomain }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiPointDomain", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "domainSet")
    public MultiPointDomain createMultiPointDomain(DomainSetTypeType value) {
        return new MultiPointDomain(value);
    }

    /**
     * Create an instance of {@link Polygon }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Polygon", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurface")
    public Polygon createPolygon(PolygonTypeType value) {
        return new Polygon(value);
    }

    /**
     * Create an instance of {@link UsesImageDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesImageDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "imageDatum")
    public UsesImageDatum createUsesImageDatum(ImageDatumPropertyTypeType value) {
        return new UsesImageDatum(value);
    }

    /**
     * Create an instance of {@link AbstractInlineProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "abstractInlineProperty")
    public AbstractInlineProperty createAbstractInlineProperty(InlinePropertyTypeType value) {
        return new AbstractInlineProperty(value);
    }

    /**
     * Create an instance of {@link IntegerValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "integerValue")
    public IntegerValue createIntegerValue(BigInteger value) {
        return new IntegerValue(value);
    }

    /**
     * Create an instance of {@link DerivedCRSType }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "derivedCRSType")
    public DerivedCRSType createDerivedCRSType(CodeWithAuthorityTypeType value) {
        return new DerivedCRSType(value);
    }

    /**
     * Create an instance of {@link DerivedUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DerivedUnit", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "UnitDefinition")
    public DerivedUnit createDerivedUnit(DerivedUnitTypeType value) {
        return new DerivedUnit(value);
    }

    /**
     * Create an instance of {@link UsesEllipsoid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesEllipsoid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "ellipsoid")
    public UsesEllipsoid createUsesEllipsoid(EllipsoidPropertyTypeType value) {
        return new UsesEllipsoid(value);
    }

    /**
     * Create an instance of {@link AbstractSurfacePatch }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractSurfacePatch")
    public AbstractSurfacePatch createAbstractSurfacePatch(AbstractSurfacePatchTypeType value) {
        return new AbstractSurfacePatch(value);
    }

    /**
     * Create an instance of {@link AffinePlacement }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AffinePlacement", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public AffinePlacement createAffinePlacement(AffinePlacementTypeType value) {
        return new AffinePlacement(value);
    }

    /**
     * Create an instance of {@link StringValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "stringValue")
    public StringValue createStringValue(String value) {
        return new StringValue(value);
    }

    /**
     * Create an instance of {@link Target }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "target")
    public Target createTarget(TargetPropertyTypeType value) {
        return new Target(value);
    }

    /**
     * Create an instance of {@link BaseGeographicCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "baseGeographicCRS")
    public BaseGeographicCRS createBaseGeographicCRS(GeographicCRSPropertyTypeType value) {
        return new BaseGeographicCRS(value);
    }

    /**
     * Create an instance of {@link RangeParameters }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "rangeParameters")
    public RangeParameters createRangeParameters(AssociationRoleTypeType value) {
        return new RangeParameters(value);
    }

    /**
     * Create an instance of {@link TransformationRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "transformationRef")
    public TransformationRef createTransformationRef(TransformationPropertyTypeType value) {
        return new TransformationRef(value);
    }

    /**
     * Create an instance of {@link AbstractCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public AbstractCRS createAbstractCRS(AbstractCRSTypeType value) {
        return new AbstractCRS(value);
    }

    /**
     * Create an instance of {@link AbstractTimeSlice }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTimeSlice", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public AbstractTimeSlice createAbstractTimeSlice(AbstractTimeSliceTypeType value) {
        return new AbstractTimeSlice(value);
    }

    /**
     * Create an instance of {@link EllipsoidUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Ellipsoid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public EllipsoidUpperCase createEllipsoidUpperCase(EllipsoidTypeType value) {
        return new EllipsoidUpperCase(value);
    }

    /**
     * Create an instance of {@link Formula }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "formula")
    public Formula createFormula(CodeTypeType value) {
        return new Formula(value);
    }

    /**
     * Create an instance of {@link TimeReferenceSystem }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeReferenceSystem", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public TimeReferenceSystem createTimeReferenceSystem(TimeReferenceSystemTypeType value) {
        return new TimeReferenceSystem(value);
    }

    /**
     * Create an instance of {@link TriangulatedSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TriangulatedSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Surface")
    public TriangulatedSurface createTriangulatedSurface(SurfaceTypeType value) {
        return new TriangulatedSurface(value);
    }

    /**
     * Create an instance of {@link AbstractSingleOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractSingleOperation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateOperation")
    public AbstractSingleOperation createAbstractSingleOperation(AbstractCoordinateOperationTypeType value) {
        return new AbstractSingleOperation(value);
    }

    /**
     * Create an instance of {@link Location }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "location")
    public Location createLocation(LocationPropertyTypeType value) {
        return new Location(value);
    }

    /**
     * Create an instance of {@link LineString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "LineString", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurve")
    public LineString createLineString(LineStringTypeType value) {
        return new LineString(value);
    }

    /**
     * Create an instance of {@link RangeSet }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "rangeSet")
    public RangeSet createRangeSet(RangeSetTypeType value) {
        return new RangeSet(value);
    }

    /**
     * Create an instance of {@link PolygonPatch }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "PolygonPatch", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurfacePatch")
    public PolygonPatch createPolygonPatch(PolygonPatchTypeType value) {
        return new PolygonPatch(value);
    }

    /**
     * Create an instance of {@link DecimalMinutes }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "decimalMinutes")
    public DecimalMinutes createDecimalMinutes(BigDecimal value) {
        return new DecimalMinutes(value);
    }

    /**
     * Create an instance of {@link UsesEllipsoidalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesEllipsoidalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "ellipsoidalCS")
    public UsesEllipsoidalCS createUsesEllipsoidalCS(EllipsoidalCSPropertyTypeType value) {
        return new UsesEllipsoidalCS(value);
    }

    /**
     * Create an instance of {@link ObliqueCartesianCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ObliqueCartesianCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public ObliqueCartesianCS createObliqueCartesianCS(ObliqueCartesianCSTypeType value) {
        return new ObliqueCartesianCS(value);
    }

    /**
     * Create an instance of {@link DataBlock }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DataBlock", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public DataBlock createDataBlock(DataBlockTypeType value) {
        return new DataBlock(value);
    }

    /**
     * Create an instance of {@link Description }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "description")
    public Description createDescription(StringOrRefTypeType value) {
        return new Description(value);
    }

    /**
     * Create an instance of {@link CompositeSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CompositeSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurface")
    public CompositeSurface createCompositeSurface(CompositeSurfaceTypeType value) {
        return new CompositeSurface(value);
    }

    /**
     * Create an instance of {@link CoordinateSystemAxisRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "coordinateSystemAxisRef")
    public CoordinateSystemAxisRef createCoordinateSystemAxisRef(CoordinateSystemAxisPropertyTypeType value) {
        return new CoordinateSystemAxisRef(value);
    }

    /**
     * Create an instance of {@link GeneralConversionRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "generalConversionRef")
    public GeneralConversionRef createGeneralConversionRef(GeneralConversionPropertyTypeType value) {
        return new GeneralConversionRef(value);
    }

    /**
     * Create an instance of {@link BooleanList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "BooleanList", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValueList")
    public BooleanList createBooleanList(List<String> value) {
        return new BooleanList(((List<String> ) value));
    }

    /**
     * Create an instance of {@link MetaDataProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "metaDataProperty")
    public MetaDataProperty createMetaDataProperty(MetaDataPropertyTypeType value) {
        return new MetaDataProperty(value);
    }

    /**
     * Create an instance of {@link RectifiedGridCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "RectifiedGridCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDiscreteCoverage")
    public RectifiedGridCoverage createRectifiedGridCoverage(DiscreteCoverageTypeType value) {
        return new RectifiedGridCoverage(value);
    }

    /**
     * Create an instance of {@link TimeTopologyComplex }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeTopologyComplex", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeComplex")
    public TimeTopologyComplex createTimeTopologyComplex(TimeTopologyComplexTypeType value) {
        return new TimeTopologyComplex(value);
    }

    /**
     * Create an instance of {@link UnitDefinition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "UnitDefinition", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public UnitDefinition createUnitDefinition(UnitDefinitionTypeType value) {
        return new UnitDefinition(value);
    }

    /**
     * Create an instance of {@link ValueComponent }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "valueComponent")
    public ValueComponent createValueComponent(ValuePropertyTypeType value) {
        return new ValueComponent(value);
    }

    /**
     * Create an instance of {@link TimeCalendar }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeCalendar", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "TimeReferenceSystem")
    public TimeCalendar createTimeCalendar(TimeCalendarTypeType value) {
        return new TimeCalendar(value);
    }

    /**
     * Create an instance of {@link GeneralTransformationRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "generalTransformationRef")
    public GeneralTransformationRef createGeneralTransformationRef(GeneralTransformationPropertyTypeType value) {
        return new GeneralTransformationRef(value);
    }

    /**
     * Create an instance of {@link Shell }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Shell", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurface")
    public Shell createShell(ShellTypeType value) {
        return new Shell(value);
    }

    /**
     * Create an instance of {@link Definition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Definition", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public Definition createDefinition(DefinitionTypeType value) {
        return new Definition(value);
    }

    /**
     * Create an instance of {@link Curve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Curve", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurve")
    public Curve createCurve(CurveTypeType value) {
        return new Curve(value);
    }

    /**
     * Create an instance of {@link PointRep }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "pointRep")
    public PointRep createPointRep(PointPropertyTypeType value) {
        return new PointRep(value);
    }

    /**
     * Create an instance of {@link Method }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "method")
    public Method createMethod(OperationMethodPropertyTypeType value) {
        return new Method(value);
    }

    /**
     * Create an instance of {@link TimePeriod }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimePeriod", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeGeometricPrimitive")
    public TimePeriod createTimePeriod(TimePeriodTypeType value) {
        return new TimePeriod(value);
    }

    /**
     * Create an instance of {@link Identifier }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "identifier")
    public Identifier createIdentifier(CodeWithAuthorityTypeType value) {
        return new Identifier(value);
    }

    /**
     * Create an instance of {@link CartesianCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CartesianCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public CartesianCSUpperCase createCartesianCSUpperCase(CartesianCSTypeType value) {
        return new CartesianCSUpperCase(value);
    }

    /**
     * Create an instance of {@link TupleList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "tupleList")
    public TupleList createTupleList(CoordinatesTypeType value) {
        return new TupleList(value);
    }

    /**
     * Create an instance of {@link AbstractGeometricAggregate }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeometricAggregate", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometry")
    public AbstractGeometricAggregate createAbstractGeometricAggregate(AbstractGeometricAggregateTypeType value) {
        return new AbstractGeometricAggregate(value);
    }

    /**
     * Create an instance of {@link CurveMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "curveMembers")
    public CurveMembers createCurveMembers(CurveArrayPropertyTypeType value) {
        return new CurveMembers(value);
    }

    /**
     * Create an instance of {@link AbstractCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractCurve", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricPrimitive")
    public AbstractCurve createAbstractCurve(AbstractCurveTypeType value) {
        return new AbstractCurve(value);
    }

    /**
     * Create an instance of {@link AbstractDiscreteCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractDiscreteCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoverage")
    public AbstractDiscreteCoverage createAbstractDiscreteCoverage(DiscreteCoverageTypeType value) {
        return new AbstractDiscreteCoverage(value);
    }

    /**
     * Create an instance of {@link TemporalDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "temporalDatum")
    public TemporalDatum createTemporalDatum(TemporalDatumPropertyTypeType value) {
        return new TemporalDatum(value);
    }

    /**
     * Create an instance of {@link Degrees }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "degrees")
    public Degrees createDegrees(DegreesTypeType value) {
        return new Degrees(value);
    }

    /**
     * Create an instance of {@link Triangle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Triangle", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurfacePatch")
    public Triangle createTriangle(TriangleTypeType value) {
        return new Triangle(value);
    }

    /**
     * Create an instance of {@link Rectangle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Rectangle", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurfacePatch")
    public Rectangle createRectangle(RectangleTypeType value) {
        return new Rectangle(value);
    }

    /**
     * Create an instance of {@link Count }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Count", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValue")
    public Count createCount(Count.Type value) {
        return new Count(value);
    }

    /**
     * Create an instance of {@link ParameterValueGroup }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ParameterValueGroup", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralParameterValue")
    public ParameterValueGroup createParameterValueGroup(ParameterValueGroupTypeType value) {
        return new ParameterValueGroup(value);
    }

    /**
     * Create an instance of {@link SolidArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "solidArrayProperty")
    public SolidArrayProperty createSolidArrayProperty(SolidArrayPropertyTypeType value) {
        return new SolidArrayProperty(value);
    }

    /**
     * Create an instance of {@link GenericMetaData }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GenericMetaData", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractMetaData")
    public GenericMetaData createGenericMetaData(GenericMetaDataTypeType value) {
        return new GenericMetaData(value);
    }

    /**
     * Create an instance of {@link ch.ehi.oereb.schemas.gml._3_2.Boolean }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Boolean", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValue")
    public ch.ehi.oereb.schemas.gml._3_2.Boolean createBoolean(ch.ehi.oereb.schemas.gml._3_2.Boolean.Type value) {
        return new ch.ehi.oereb.schemas.gml._3_2.Boolean(value);
    }

    /**
     * Create an instance of {@link AbstractContinuousCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractContinuousCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractFeature")
    public AbstractContinuousCoverage createAbstractContinuousCoverage(AbstractContinuousCoverageTypeType value) {
        return new AbstractContinuousCoverage(value);
    }

    /**
     * Create an instance of {@link UsesCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "coordinateSystem")
    public UsesCS createUsesCS(CoordinateSystemPropertyTypeType value) {
        return new UsesCS(value);
    }

    /**
     * Create an instance of {@link DefinitionMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "definitionMember", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "dictionaryEntry")
    public DefinitionMember createDefinitionMember(DictionaryEntryTypeType value) {
        return new DefinitionMember(value);
    }

    /**
     * Create an instance of {@link AxisDirection }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "axisDirection")
    public AxisDirection createAxisDirection(CodeWithAuthorityTypeType value) {
        return new AxisDirection(value);
    }

    /**
     * Create an instance of {@link Seconds }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "seconds")
    public Seconds createSeconds(BigDecimal value) {
        return new Seconds(value);
    }

    /**
     * Create an instance of {@link CrsRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "crsRef")
    public CrsRef createCrsRef(CRSPropertyTypeType value) {
        return new CrsRef(value);
    }

    /**
     * Create an instance of {@link Cone }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Cone", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGriddedSurface")
    public Cone createCone(ConeTypeType value) {
        return new Cone(value);
    }

    /**
     * Create an instance of {@link LocationName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "locationName")
    public LocationName createLocationName(CodeTypeType value) {
        return new LocationName(value);
    }

    /**
     * Create an instance of {@link ConversionRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "conversionRef")
    public ConversionRef createConversionRef(ConversionPropertyTypeType value) {
        return new ConversionRef(value);
    }

    /**
     * Create an instance of {@link AbstractGeneralOperationParameter }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeneralOperationParameter", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public AbstractGeneralOperationParameter createAbstractGeneralOperationParameter(AbstractGeneralOperationParameterTypeType value) {
        return new AbstractGeneralOperationParameter(value);
    }

    /**
     * Create an instance of {@link StatusReference }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "statusReference")
    public StatusReference createStatusReference(ReferenceTypeType value) {
        return new StatusReference(value);
    }

    /**
     * Create an instance of {@link EllipsoidRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ellipsoidRef")
    public EllipsoidRef createEllipsoidRef(EllipsoidPropertyTypeType value) {
        return new EllipsoidRef(value);
    }

    /**
     * Create an instance of {@link ProjectedCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ProjectedCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralDerivedCRS")
    public ProjectedCRS createProjectedCRS(ProjectedCRSTypeType value) {
        return new ProjectedCRS(value);
    }

    /**
     * Create an instance of {@link CoordinateOperationRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "coordinateOperationRef")
    public CoordinateOperationRef createCoordinateOperationRef(CoordinateOperationPropertyTypeType value) {
        return new CoordinateOperationRef(value);
    }

    /**
     * Create an instance of {@link UsesMethod }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesMethod", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "method")
    public UsesMethod createUsesMethod(OperationMethodPropertyTypeType value) {
        return new UsesMethod(value);
    }

    /**
     * Create an instance of {@link PolarCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "PolarCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public PolarCSUpperCase createPolarCSUpperCase(PolarCSTypeType value) {
        return new PolarCSUpperCase(value);
    }

    /**
     * Create an instance of {@link PassThroughOperationRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "passThroughOperationRef")
    public PassThroughOperationRef createPassThroughOperationRef(PassThroughOperationPropertyTypeType value) {
        return new PassThroughOperationRef(value);
    }

    /**
     * Create an instance of {@link Grid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Grid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractImplicitGeometry")
    public Grid createGrid(GridTypeType value) {
        return new Grid(value);
    }

    /**
     * Create an instance of {@link CoordOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "coordOperation")
    public CoordOperation createCoordOperation(CoordinateOperationPropertyTypeType value) {
        return new CoordOperation(value);
    }

    /**
     * Create an instance of {@link SurfaceArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "surfaceArrayProperty")
    public SurfaceArrayProperty createSurfaceArrayProperty(SurfaceArrayPropertyTypeType value) {
        return new SurfaceArrayProperty(value);
    }

    /**
     * Create an instance of {@link MultiSurfaceProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiSurfaceProperty")
    public MultiSurfaceProperty createMultiSurfaceProperty(MultiSurfacePropertyTypeType value) {
        return new MultiSurfaceProperty(value);
    }

    /**
     * Create an instance of {@link GeographicCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "geographicCRSRef")
    public GeographicCRSRef createGeographicCRSRef(GeographicCRSPropertyTypeType value) {
        return new GeographicCRSRef(value);
    }

    /**
     * Create an instance of {@link GeocentricCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GeocentricCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public GeocentricCRS createGeocentricCRS(GeocentricCRSTypeType value) {
        return new GeocentricCRS(value);
    }

    /**
     * Create an instance of {@link EllipsoidalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ellipsoidalCS")
    public EllipsoidalCS createEllipsoidalCS(EllipsoidalCSPropertyTypeType value) {
        return new EllipsoidalCS(value);
    }

    /**
     * Create an instance of {@link SphericalCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "sphericalCSRef")
    public SphericalCSRef createSphericalCSRef(SphericalCSPropertyTypeType value) {
        return new SphericalCSRef(value);
    }

    /**
     * Create an instance of {@link GmlProfileSchema }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "gmlProfileSchema")
    public GmlProfileSchema createGmlProfileSchema(String value) {
        return new GmlProfileSchema(value);
    }

    /**
     * Create an instance of {@link UsesTemporalDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesTemporalDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "temporalDatum")
    public UsesTemporalDatum createUsesTemporalDatum(TemporalDatumPropertyTypeType value) {
        return new UsesTemporalDatum(value);
    }

    /**
     * Create an instance of {@link PointMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "pointMembers")
    public PointMembers createPointMembers(PointArrayPropertyTypeType value) {
        return new PointMembers(value);
    }

    /**
     * Create an instance of {@link IncludesSingleCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "includesSingleCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "componentReferenceSystem")
    public IncludesSingleCRS createIncludesSingleCRS(SingleCRSPropertyTypeType value) {
        return new IncludesSingleCRS(value);
    }

    /**
     * Create an instance of {@link OrientableCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "OrientableCurve", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurve")
    public OrientableCurve createOrientableCurve(OrientableCurveTypeType value) {
        return new OrientableCurve(value);
    }

    /**
     * Create an instance of {@link Ellipsoid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ellipsoid")
    public Ellipsoid createEllipsoid(EllipsoidPropertyTypeType value) {
        return new Ellipsoid(value);
    }

    /**
     * Create an instance of {@link AbstractFeature }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractFeature", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public AbstractFeature createAbstractFeature(AbstractFeatureTypeType value) {
        return new AbstractFeature(value);
    }

    /**
     * Create an instance of {@link MultiCurveProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiCurveProperty")
    public MultiCurveProperty createMultiCurveProperty(MultiCurvePropertyTypeType value) {
        return new MultiCurveProperty(value);
    }

    /**
     * Create an instance of {@link ImageDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "imageDatum")
    public ImageDatum createImageDatum(ImageDatumPropertyTypeType value) {
        return new ImageDatum(value);
    }

    /**
     * Create an instance of {@link History }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "history")
    public History createHistory(HistoryPropertyTypeType value) {
        return new History(value);
    }

    /**
     * Create an instance of {@link OperationParameterGroupRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "operationParameterGroupRef")
    public OperationParameterGroupRef createOperationParameterGroupRef(OperationParameterPropertyTypeType value) {
        return new OperationParameterGroupRef(value);
    }

    /**
     * Create an instance of {@link Minutes }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "minutes")
    public Minutes createMinutes(Integer value) {
        return new Minutes(value);
    }

    /**
     * Create an instance of {@link CategoryExtent }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CategoryExtent", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractValue")
    public CategoryExtent createCategoryExtent(CategoryExtentTypeType value) {
        return new CategoryExtent(value);
    }

    /**
     * Create an instance of {@link DataSource }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "dataSource")
    public DataSource createDataSource(StringOrRefTypeType value) {
        return new DataSource(value);
    }

    /**
     * Create an instance of {@link AbstractReference }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "abstractReference")
    public AbstractReference createAbstractReference(ReferenceTypeType value) {
        return new AbstractReference(value);
    }

    /**
     * Create an instance of {@link BooleanValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "booleanValue")
    public BooleanValue createBooleanValue(java.lang.Boolean value) {
        return new BooleanValue(value);
    }

    /**
     * Create an instance of {@link PixelInCell }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "pixelInCell")
    public PixelInCell createPixelInCell(CodeWithAuthorityTypeType value) {
        return new PixelInCell(value);
    }

    /**
     * Create an instance of {@link AbstractDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public AbstractDatum createAbstractDatum(AbstractDatumTypeType value) {
        return new AbstractDatum(value);
    }

    /**
     * Create an instance of {@link EngineeringDatumUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "EngineeringDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDatum")
    public EngineeringDatumUpperCase createEngineeringDatumUpperCase(EngineeringDatumTypeType value) {
        return new EngineeringDatumUpperCase(value);
    }

    /**
     * Create an instance of {@link Axis }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "axis")
    public Axis createAxis(CoordinateSystemAxisPropertyTypeType value) {
        return new Axis(value);
    }

    /**
     * Create an instance of {@link PrimeMeridianRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "primeMeridianRef")
    public PrimeMeridianRef createPrimeMeridianRef(PrimeMeridianPropertyTypeType value) {
        return new PrimeMeridianRef(value);
    }

    /**
     * Create an instance of {@link TopoPrimitiveMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "topoPrimitiveMembers")
    public TopoPrimitiveMembers createTopoPrimitiveMembers(TopoPrimitiveArrayAssociationTypeType value) {
        return new TopoPrimitiveMembers(value);
    }

    /**
     * Create an instance of {@link OrientableSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "OrientableSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurface")
    public OrientableSurface createOrientableSurface(OrientableSurfaceTypeType value) {
        return new OrientableSurface(value);
    }

    /**
     * Create an instance of {@link UsesSphericalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesSphericalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "sphericalCS")
    public UsesSphericalCS createUsesSphericalCS(SphericalCSPropertyTypeType value) {
        return new UsesSphericalCS(value);
    }

    /**
     * Create an instance of {@link SurfaceMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "surfaceMember")
    public SurfaceMember createSurfaceMember(SurfacePropertyTypeType value) {
        return new SurfaceMember(value);
    }

    /**
     * Create an instance of {@link MultiPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiPoint", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricAggregate")
    public MultiPoint createMultiPoint(MultiPointTypeType value) {
        return new MultiPoint(value);
    }

    /**
     * Create an instance of {@link Transformation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Transformation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralTransformation")
    public Transformation createTransformation(TransformationTypeType value) {
        return new Transformation(value);
    }

    /**
     * Create an instance of {@link Group }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "group")
    public Group createGroup(OperationParameterGroupPropertyTypeType value) {
        return new Group(value);
    }

    /**
     * Create an instance of {@link AbstractMetaData }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractMetaData", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public AbstractMetaData createAbstractMetaData(AbstractMetaDataTypeType value) {
        return new AbstractMetaData(value);
    }

    /**
     * Create an instance of {@link CubicSpline }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CubicSpline", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public CubicSpline createCubicSpline(CubicSplineTypeType value) {
        return new CubicSpline(value);
    }

    /**
     * Create an instance of {@link MultiCurveDomain }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiCurveDomain", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "domainSet")
    public MultiCurveDomain createMultiCurveDomain(DomainSetTypeType value) {
        return new MultiCurveDomain(value);
    }

    /**
     * Create an instance of {@link DmsAngleValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "dmsAngleValue")
    public DmsAngleValue createDmsAngleValue(DMSAngleTypeType value) {
        return new DmsAngleValue(value);
    }

    /**
     * Create an instance of {@link PolarCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "polarCSRef")
    public PolarCSRef createPolarCSRef(PolarCSPropertyTypeType value) {
        return new PolarCSRef(value);
    }

    /**
     * Create an instance of {@link Quantity }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Quantity", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValue")
    public Quantity createQuantity(Quantity.Type value) {
        return new Quantity(value);
    }

    /**
     * Create an instance of {@link Bag }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Bag", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public Bag createBag(BagTypeType value) {
        return new Bag(value);
    }

    /**
     * Create an instance of {@link TimePosition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "timePosition")
    public TimePosition createTimePosition(TimePositionTypeType value) {
        return new TimePosition(value);
    }

    /**
     * Create an instance of {@link DmsAngle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "dmsAngle")
    public DmsAngle createDmsAngle(DMSAngleTypeType value) {
        return new DmsAngle(value);
    }

    /**
     * Create an instance of {@link PointProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "pointProperty")
    public PointProperty createPointProperty(PointPropertyTypeType value) {
        return new PointProperty(value);
    }

    /**
     * Create an instance of {@link MultiGeometryProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiGeometryProperty")
    public MultiGeometryProperty createMultiGeometryProperty(MultiGeometryPropertyTypeType value) {
        return new MultiGeometryProperty(value);
    }

    /**
     * Create an instance of {@link MultiSolidDomain }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiSolidDomain", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "domainSet")
    public MultiSolidDomain createMultiSolidDomain(DomainSetTypeType value) {
        return new MultiSolidDomain(value);
    }

    /**
     * Create an instance of {@link UserDefinedCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "userDefinedCSRef")
    public UserDefinedCSRef createUserDefinedCSRef(UserDefinedCSPropertyTypeType value) {
        return new UserDefinedCSRef(value);
    }

    /**
     * Create an instance of {@link FeatureCollection }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "FeatureCollection", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractFeature")
    public FeatureCollection createFeatureCollection(FeatureCollectionTypeType value) {
        return new FeatureCollection(value);
    }

    /**
     * Create an instance of {@link ValueList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "valueList")
    public ValueList createValueList(MeasureListTypeType value) {
        return new ValueList(value);
    }

    /**
     * Create an instance of {@link CartesianCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "cartesianCS")
    public CartesianCS createCartesianCS(CartesianCSPropertyTypeType value) {
        return new CartesianCS(value);
    }

    /**
     * Create an instance of {@link FeatureMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "featureMember")
    public FeatureMember createFeatureMember(FeaturePropertyTypeType value) {
        return new FeatureMember(value);
    }

    /**
     * Create an instance of {@link AbstractGeneralParameterValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeneralParameterValue", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public AbstractGeneralParameterValue createAbstractGeneralParameterValue(AbstractGeneralParameterValueTypeType value) {
        return new AbstractGeneralParameterValue(value);
    }

    /**
     * Create an instance of {@link AbstractStrictAssociationRole }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "abstractStrictAssociationRole")
    public AbstractStrictAssociationRole createAbstractStrictAssociationRole(AssociationRoleTypeType value) {
        return new AbstractStrictAssociationRole(value);
    }

    /**
     * Create an instance of {@link Category }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Category", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValue")
    public Category createCategory(Category.Type value) {
        return new Category(value);
    }

    /**
     * Create an instance of {@link Value }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "value")
    public Value createValue(MeasureTypeType value) {
        return new Value(value);
    }

    /**
     * Create an instance of {@link Track }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "track", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "history")
    public Track createTrack(HistoryPropertyTypeType value) {
        return new Track(value);
    }

    /**
     * Create an instance of {@link MultiCurveCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiCurveCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDiscreteCoverage")
    public MultiCurveCoverage createMultiCurveCoverage(DiscreteCoverageTypeType value) {
        return new MultiCurveCoverage(value);
    }

    /**
     * Create an instance of {@link AffineCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AffineCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public AffineCSUpperCase createAffineCSUpperCase(AffineCSTypeType value) {
        return new AffineCSUpperCase(value);
    }

    /**
     * Create an instance of {@link IncludesValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "includesValue", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "parameterValue")
    public IncludesValue createIncludesValue(AbstractGeneralParameterValuePropertyTypeType value) {
        return new IncludesValue(value);
    }

    /**
     * Create an instance of {@link CompositeCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CompositeCurve", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurve")
    public CompositeCurve createCompositeCurve(CompositeCurveTypeType value) {
        return new CompositeCurve(value);
    }

    /**
     * Create an instance of {@link TopoComplexProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "topoComplexProperty")
    public TopoComplexProperty createTopoComplexProperty(TopoComplexPropertyTypeType value) {
        return new TopoComplexProperty(value);
    }

    /**
     * Create an instance of {@link TopoSurfaceProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "topoSurfaceProperty")
    public TopoSurfaceProperty createTopoSurfaceProperty(TopoSurfacePropertyTypeType value) {
        return new TopoSurfaceProperty(value);
    }

    /**
     * Create an instance of {@link RangeMeaning }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "rangeMeaning")
    public RangeMeaning createRangeMeaning(CodeWithAuthorityTypeType value) {
        return new RangeMeaning(value);
    }

    /**
     * Create an instance of {@link Parameter }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "parameter")
    public Parameter createParameter(AbstractGeneralOperationParameterPropertyTypeType value) {
        return new Parameter(value);
    }

    /**
     * Create an instance of {@link CurveProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "curveProperty")
    public CurveProperty createCurveProperty(CurvePropertyTypeType value) {
        return new CurveProperty(value);
    }

    /**
     * Create an instance of {@link UsesObliqueCartesianCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesObliqueCartesianCS")
    public UsesObliqueCartesianCS createUsesObliqueCartesianCS(ObliqueCartesianCSPropertyTypeType value) {
        return new UsesObliqueCartesianCS(value);
    }

    /**
     * Create an instance of {@link ModifiedCoordinate }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "modifiedCoordinate")
    public ModifiedCoordinate createModifiedCoordinate(BigInteger value) {
        return new ModifiedCoordinate(value);
    }

    /**
     * Create an instance of {@link ComponentReferenceSystem }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "componentReferenceSystem")
    public ComponentReferenceSystem createComponentReferenceSystem(SingleCRSPropertyTypeType value) {
        return new ComponentReferenceSystem(value);
    }

    /**
     * Create an instance of {@link GeometryMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "geometryMembers")
    public GeometryMembers createGeometryMembers(GeometryArrayPropertyTypeType value) {
        return new GeometryMembers(value);
    }

    /**
     * Create an instance of {@link AbstractGeneralOperationParameterRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "abstractGeneralOperationParameterRef")
    public AbstractGeneralOperationParameterRef createAbstractGeneralOperationParameterRef(AbstractGeneralOperationParameterPropertyTypeType value) {
        return new AbstractGeneralOperationParameterRef(value);
    }

    /**
     * Create an instance of {@link GeometricComplex }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GeometricComplex", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometry")
    public GeometricComplex createGeometricComplex(GeometricComplexTypeType value) {
        return new GeometricComplex(value);
    }

    /**
     * Create an instance of {@link ParameterValueUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ParameterValue", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralParameterValue")
    public ParameterValueUpperCase createParameterValueUpperCase(ParameterValueTypeType value) {
        return new ParameterValueUpperCase(value);
    }

    /**
     * Create an instance of {@link GeometryMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "geometryMember")
    public GeometryMember createGeometryMember(GeometryPropertyTypeType value) {
        return new GeometryMember(value);
    }

    /**
     * Create an instance of {@link CenterOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "centerOf")
    public CenterOf createCenterOf(PointPropertyTypeType value) {
        return new CenterOf(value);
    }

    /**
     * Create an instance of {@link TimeInstant }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeInstant", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeGeometricPrimitive")
    public TimeInstant createTimeInstant(TimeInstantTypeType value) {
        return new TimeInstant(value);
    }

    /**
     * Create an instance of {@link CartesianCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "cartesianCSRef")
    public CartesianCSRef createCartesianCSRef(CartesianCSPropertyTypeType value) {
        return new CartesianCSRef(value);
    }

    /**
     * Create an instance of {@link MinimumOccurs }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "minimumOccurs")
    public MinimumOccurs createMinimumOccurs(BigInteger value) {
        return new MinimumOccurs(value);
    }

    /**
     * Create an instance of {@link AbstractTimeTopologyPrimitive }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTimeTopologyPrimitive", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimePrimitive")
    public AbstractTimeTopologyPrimitive createAbstractTimeTopologyPrimitive(AbstractTimeTopologyPrimitiveTypeType value) {
        return new AbstractTimeTopologyPrimitive(value);
    }

    /**
     * Create an instance of {@link MultiSolidCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiSolidCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDiscreteCoverage")
    public MultiSolidCoverage createMultiSolidCoverage(DiscreteCoverageTypeType value) {
        return new MultiSolidCoverage(value);
    }

    /**
     * Create an instance of {@link AbstractGML }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGML", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public AbstractGML createAbstractGML(AbstractGMLTypeType value) {
        return new AbstractGML(value);
    }

    /**
     * Create an instance of {@link ArcString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ArcString", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public ArcString createArcString(ArcStringTypeType value) {
        return new ArcString(value);
    }

    /**
     * Create an instance of {@link TopoVolumeProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "topoVolumeProperty")
    public TopoVolumeProperty createTopoVolumeProperty(TopoVolumePropertyTypeType value) {
        return new TopoVolumeProperty(value);
    }

    /**
     * Create an instance of {@link AbstractGeometricPrimitive }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeometricPrimitive", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometry")
    public AbstractGeometricPrimitive createAbstractGeometricPrimitive(AbstractGeometricPrimitiveTypeType value) {
        return new AbstractGeometricPrimitive(value);
    }

    /**
     * Create an instance of {@link CatalogSymbol }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "catalogSymbol")
    public CatalogSymbol createCatalogSymbol(CodeTypeType value) {
        return new CatalogSymbol(value);
    }

    /**
     * Create an instance of {@link TopoPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TopoPoint")
    public TopoPoint createTopoPoint(TopoPointTypeType value) {
        return new TopoPoint(value);
    }

    /**
     * Create an instance of {@link DerivedCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "derivedCRSRef")
    public DerivedCRSRef createDerivedCRSRef(DerivedCRSPropertyTypeType value) {
        return new DerivedCRSRef(value);
    }

    /**
     * Create an instance of {@link GridDomain }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "gridDomain", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "domainSet")
    public GridDomain createGridDomain(DomainSetTypeType value) {
        return new GridDomain(value);
    }

    /**
     * Create an instance of {@link AffineCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "affineCS")
    public AffineCS createAffineCS(AffineCSPropertyTypeType value) {
        return new AffineCS(value);
    }

    /**
     * Create an instance of {@link FeatureProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "featureProperty")
    public FeatureProperty createFeatureProperty(FeaturePropertyTypeType value) {
        return new FeatureProperty(value);
    }

    /**
     * Create an instance of {@link TopoCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TopoCurve")
    public TopoCurve createTopoCurve(TopoCurveTypeType value) {
        return new TopoCurve(value);
    }

    /**
     * Create an instance of {@link RectifiedGrid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "RectifiedGrid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Grid")
    public RectifiedGrid createRectifiedGrid(RectifiedGridTypeType value) {
        return new RectifiedGrid(value);
    }

    /**
     * Create an instance of {@link CoverageFunction }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "coverageFunction", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public CoverageFunction createCoverageFunction(CoverageFunctionTypeType value) {
        return new CoverageFunction(value);
    }

    /**
     * Create an instance of {@link TimeCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "timeCS")
    public TimeCS createTimeCS(TimeCSPropertyTypeType value) {
        return new TimeCS(value);
    }

    /**
     * Create an instance of {@link Sphere }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Sphere", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGriddedSurface")
    public Sphere createSphere(SphereTypeType value) {
        return new Sphere(value);
    }

    /**
     * Create an instance of {@link PolarCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "polarCS")
    public PolarCS createPolarCS(PolarCSPropertyTypeType value) {
        return new PolarCS(value);
    }

    /**
     * Create an instance of {@link PolyhedralSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "PolyhedralSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Surface")
    public PolyhedralSurface createPolyhedralSurface(SurfaceTypeType value) {
        return new PolyhedralSurface(value);
    }

    /**
     * Create an instance of {@link UsesValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesValue", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "parameterValue")
    public UsesValue createUsesValue(AbstractGeneralParameterValuePropertyTypeType value) {
        return new UsesValue(value);
    }

    /**
     * Create an instance of {@link SurfaceProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "surfaceProperty")
    public SurfaceProperty createSurfaceProperty(SurfacePropertyTypeType value) {
        return new SurfaceProperty(value);
    }

    /**
     * Create an instance of {@link UserDefinedCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "userDefinedCS")
    public UserDefinedCS createUserDefinedCS(UserDefinedCSPropertyTypeType value) {
        return new UserDefinedCS(value);
    }

    /**
     * Create an instance of {@link DefinedByConversion }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "definedByConversion", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "conversion")
    public DefinedByConversion createDefinedByConversion(GeneralConversionPropertyTypeType value) {
        return new DefinedByConversion(value);
    }

    /**
     * Create an instance of {@link LocationString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "LocationString")
    public LocationString createLocationString(StringOrRefTypeType value) {
        return new LocationString(value);
    }

    /**
     * Create an instance of {@link LocationKeyWord }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "LocationKeyWord")
    public LocationKeyWord createLocationKeyWord(CodeTypeType value) {
        return new LocationKeyWord(value);
    }

    /**
     * Create an instance of {@link LinearRing }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "LinearRing", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractRing")
    public LinearRing createLinearRing(LinearRingTypeType value) {
        return new LinearRing(value);
    }

    /**
     * Create an instance of {@link AbstractCoordinateOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractCoordinateOperation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public AbstractCoordinateOperation createAbstractCoordinateOperation(AbstractCoordinateOperationTypeType value) {
        return new AbstractCoordinateOperation(value);
    }

    /**
     * Create an instance of {@link UsesPrimeMeridian }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesPrimeMeridian", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "primeMeridian")
    public UsesPrimeMeridian createUsesPrimeMeridian(PrimeMeridianPropertyTypeType value) {
        return new UsesPrimeMeridian(value);
    }

    /**
     * Create an instance of {@link PointMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "pointMember")
    public PointMember createPointMember(PointPropertyTypeType value) {
        return new PointMember(value);
    }

    /**
     * Create an instance of {@link Tin }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Tin", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "TriangulatedSurface")
    public Tin createTin(TinTypeType value) {
        return new Tin(value);
    }

    /**
     * Create an instance of {@link TemporalDatumRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "temporalDatumRef")
    public TemporalDatumRef createTemporalDatumRef(TemporalDatumPropertyTypeType value) {
        return new TemporalDatumRef(value);
    }

    /**
     * Create an instance of {@link GeocentricCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "geocentricCRSRef")
    public GeocentricCRSRef createGeocentricCRSRef(GeocentricCRSPropertyTypeType value) {
        return new GeocentricCRSRef(value);
    }

    /**
     * Create an instance of {@link DirectedObservationAtDistance }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DirectedObservationAtDistance", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "DirectedObservation")
    public DirectedObservationAtDistance createDirectedObservationAtDistance(DirectedObservationAtDistanceTypeType value) {
        return new DirectedObservationAtDistance(value);
    }

    /**
     * Create an instance of {@link ParameterValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "parameterValue")
    public ParameterValue createParameterValue(AbstractGeneralParameterValuePropertyTypeType value) {
        return new ParameterValue(value);
    }

    /**
     * Create an instance of {@link Interior }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "interior")
    public Interior createInterior(AbstractRingPropertyTypeType value) {
        return new Interior(value);
    }

    /**
     * Create an instance of {@link Surface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Surface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSurface")
    public Surface createSurface(SurfaceTypeType value) {
        return new Surface(value);
    }

    /**
     * Create an instance of {@link OperationMethod }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "OperationMethod", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public OperationMethod createOperationMethod(OperationMethodTypeType value) {
        return new OperationMethod(value);
    }

    /**
     * Create an instance of {@link AbstractTimeObject }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTimeObject", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public AbstractTimeObject createAbstractTimeObject(AbstractTimeObjectTypeType value) {
        return new AbstractTimeObject(value);
    }

    /**
     * Create an instance of {@link EllipsoidalCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ellipsoidalCSRef")
    public EllipsoidalCSRef createEllipsoidalCSRef(EllipsoidalCSPropertyTypeType value) {
        return new EllipsoidalCSRef(value);
    }

    /**
     * Create an instance of {@link ReferenceSystemRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "referenceSystemRef")
    public ReferenceSystemRef createReferenceSystemRef(CRSPropertyTypeType value) {
        return new ReferenceSystemRef(value);
    }

    /**
     * Create an instance of {@link ValuesOfGroup }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "valuesOfGroup", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "group")
    public ValuesOfGroup createValuesOfGroup(OperationParameterGroupPropertyTypeType value) {
        return new ValuesOfGroup(value);
    }

    /**
     * Create an instance of {@link EngineeringCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "EngineeringCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public EngineeringCRS createEngineeringCRS(EngineeringCRSTypeType value) {
        return new EngineeringCRS(value);
    }

    /**
     * Create an instance of {@link AbstractCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractFeature")
    public AbstractCoverage createAbstractCoverage(AbstractCoverageTypeType value) {
        return new AbstractCoverage(value);
    }

    /**
     * Create an instance of {@link AbstractSolid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractSolid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricPrimitive")
    public AbstractSolid createAbstractSolid(AbstractSolidTypeType value) {
        return new AbstractSolid(value);
    }

    /**
     * Create an instance of {@link SemiMajorAxis }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "semiMajorAxis")
    public SemiMajorAxis createSemiMajorAxis(MeasureTypeType value) {
        return new SemiMajorAxis(value);
    }

    /**
     * Create an instance of {@link VerticalCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "verticalCSRef")
    public VerticalCSRef createVerticalCSRef(VerticalCSPropertyTypeType value) {
        return new VerticalCSRef(value);
    }

    /**
     * Create an instance of {@link AbstractGeneralTransformation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeneralTransformation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractOperation")
    public AbstractGeneralTransformation createAbstractGeneralTransformation(AbstractGeneralTransformationTypeType value) {
        return new AbstractGeneralTransformation(value);
    }

    /**
     * Create an instance of {@link GeodeticCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GeodeticCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public GeodeticCRS createGeodeticCRS(GeodeticCRSTypeType value) {
        return new GeodeticCRS(value);
    }

    /**
     * Create an instance of {@link BoundedBy }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "boundedBy")
    public BoundedBy createBoundedBy(BoundingShapeTypeType value) {
        return new BoundedBy(value);
    }

    /**
     * Create an instance of {@link Circle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Circle", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Arc")
    public Circle createCircle(CircleTypeType value) {
        return new Circle(value);
    }

    /**
     * Create an instance of {@link MultiSurfaceDomain }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiSurfaceDomain", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "domainSet")
    public MultiSurfaceDomain createMultiSurfaceDomain(DomainSetTypeType value) {
        return new MultiSurfaceDomain(value);
    }

    /**
     * Create an instance of {@link ImageDatumUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ImageDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDatum")
    public ImageDatumUpperCase createImageDatumUpperCase(ImageDatumTypeType value) {
        return new ImageDatumUpperCase(value);
    }

    /**
     * Create an instance of {@link TopoVolume }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TopoVolume")
    public TopoVolume createTopoVolume(TopoVolumeTypeType value) {
        return new TopoVolume(value);
    }

    /**
     * Create an instance of {@link MultiEdgeOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiEdgeOf")
    public MultiEdgeOf createMultiEdgeOf(MultiCurvePropertyTypeType value) {
        return new MultiEdgeOf(value);
    }

    /**
     * Create an instance of {@link PolygonPatches }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "polygonPatches", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "patches")
    public PolygonPatches createPolygonPatches(SurfacePatchArrayPropertyTypeType value) {
        return new PolygonPatches(value);
    }

    /**
     * Create an instance of {@link EngineeringCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "engineeringCRSRef")
    public EngineeringCRSRef createEngineeringCRSRef(EngineeringCRSPropertyTypeType value) {
        return new EngineeringCRSRef(value);
    }

    /**
     * Create an instance of {@link GridCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GridCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDiscreteCoverage")
    public GridCoverage createGridCoverage(DiscreteCoverageTypeType value) {
        return new GridCoverage(value);
    }

    /**
     * Create an instance of {@link MovingObjectStatus }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MovingObjectStatus", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeSlice")
    public MovingObjectStatus createMovingObjectStatus(MovingObjectStatusTypeType value) {
        return new MovingObjectStatus(value);
    }

    /**
     * Create an instance of {@link ObliqueCartesianCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "obliqueCartesianCSRef")
    public ObliqueCartesianCSRef createObliqueCartesianCSRef(ObliqueCartesianCSPropertyTypeType value) {
        return new ObliqueCartesianCSRef(value);
    }

    /**
     * Create an instance of {@link AbstractOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractOperation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleOperation")
    public AbstractOperation createAbstractOperation(AbstractCoordinateOperationTypeType value) {
        return new AbstractOperation(value);
    }

    /**
     * Create an instance of {@link OperationVersion }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "operationVersion")
    public OperationVersion createOperationVersion(String value) {
        return new OperationVersion(value);
    }

    /**
     * Create an instance of {@link AxisAbbrev }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "axisAbbrev")
    public AxisAbbrev createAxisAbbrev(CodeTypeType value) {
        return new AxisAbbrev(value);
    }

    /**
     * Create an instance of {@link CompoundCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "compoundCRSRef")
    public CompoundCRSRef createCompoundCRSRef(CompoundCRSPropertyTypeType value) {
        return new CompoundCRSRef(value);
    }

    /**
     * Create an instance of {@link AbstractTopology }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTopology", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public AbstractTopology createAbstractTopology(AbstractTopologyTypeType value) {
        return new AbstractTopology(value);
    }

    /**
     * Create an instance of {@link LinearCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "linearCSRef")
    public LinearCSRef createLinearCSRef(LinearCSPropertyTypeType value) {
        return new LinearCSRef(value);
    }

    /**
     * Create an instance of {@link LinearCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "linearCS")
    public LinearCS createLinearCS(LinearCSPropertyTypeType value) {
        return new LinearCS(value);
    }

    /**
     * Create an instance of {@link AbstractTimePrimitive }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTimePrimitive", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeObject")
    public AbstractTimePrimitive createAbstractTimePrimitive(AbstractTimePrimitiveTypeType value) {
        return new AbstractTimePrimitive(value);
    }

    /**
     * Create an instance of {@link CoverageMappingRule }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CoverageMappingRule", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public CoverageMappingRule createCoverageMappingRule(MappingRuleTypeType value) {
        return new CoverageMappingRule(value);
    }

    /**
     * Create an instance of {@link AbstractCoordinateSystem }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractCoordinateSystem", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public AbstractCoordinateSystem createAbstractCoordinateSystem(AbstractCoordinateSystemTypeType value) {
        return new AbstractCoordinateSystem(value);
    }

    /**
     * Create an instance of {@link Clothoid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Clothoid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public Clothoid createClothoid(ClothoidTypeType value) {
        return new Clothoid(value);
    }

    /**
     * Create an instance of {@link AbstractTopoPrimitive }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTopoPrimitive", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTopology")
    public AbstractTopoPrimitive createAbstractTopoPrimitive(AbstractTopoPrimitiveTypeType value) {
        return new AbstractTopoPrimitive(value);
    }

    /**
     * Create an instance of {@link SourceDimensions }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "sourceDimensions")
    public SourceDimensions createSourceDimensions(BigInteger value) {
        return new SourceDimensions(value);
    }

    /**
     * Create an instance of {@link EllipsoidalCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "EllipsoidalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public EllipsoidalCSUpperCase createEllipsoidalCSUpperCase(EllipsoidalCSTypeType value) {
        return new EllipsoidalCSUpperCase(value);
    }

    /**
     * Create an instance of {@link AssociationName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "associationName")
    public AssociationName createAssociationName(String value) {
        return new AssociationName(value);
    }

    /**
     * Create an instance of {@link MultiCurve }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiCurve", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricAggregate")
    public MultiCurve createMultiCurve(MultiCurveTypeType value) {
        return new MultiCurve(value);
    }

    /**
     * Create an instance of {@link VerticalCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "verticalCRSRef")
    public VerticalCRSRef createVerticalCRSRef(VerticalCRSPropertyTypeType value) {
        return new VerticalCRSRef(value);
    }

    /**
     * Create an instance of {@link Bezier }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Bezier", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "BSpline")
    public Bezier createBezier(BezierTypeType value) {
        return new Bezier(value);
    }

    /**
     * Create an instance of {@link ReversePropertyName }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "reversePropertyName")
    public ReversePropertyName createReversePropertyName(String value) {
        return new ReversePropertyName(value);
    }

    /**
     * Create an instance of {@link TopoPrimitiveMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "topoPrimitiveMember")
    public TopoPrimitiveMember createTopoPrimitiveMember(TopoPrimitiveMemberTypeType value) {
        return new TopoPrimitiveMember(value);
    }

    /**
     * Create an instance of {@link UserDefinedCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "UserDefinedCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public UserDefinedCSUpperCase createUserDefinedCSUpperCase(UserDefinedCSTypeType value) {
        return new UserDefinedCSUpperCase(value);
    }

    /**
     * Create an instance of {@link DerivedCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DerivedCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralDerivedCRS")
    public DerivedCRS createDerivedCRS(DerivedCRSTypeType value) {
        return new DerivedCRS(value);
    }

    /**
     * Create an instance of {@link FeatureMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "featureMembers")
    public FeatureMembers createFeatureMembers(FeatureArrayPropertyTypeType value) {
        return new FeatureMembers(value);
    }

    /**
     * Create an instance of {@link UsesParameter }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesParameter", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "generalOperationParameter")
    public UsesParameter createUsesParameter(AbstractGeneralOperationParameterPropertyTypeType value) {
        return new UsesParameter(value);
    }

    /**
     * Create an instance of {@link RoughConversionToPreferredUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "roughConversionToPreferredUnit")
    public RoughConversionToPreferredUnit createRoughConversionToPreferredUnit(ConversionToPreferredUnitTypeType value) {
        return new RoughConversionToPreferredUnit(value);
    }

    /**
     * Create an instance of {@link GreenwichLongitude }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "greenwichLongitude")
    public GreenwichLongitude createGreenwichLongitude(AngleTypeType value) {
        return new GreenwichLongitude(value);
    }

    /**
     * Create an instance of {@link LineStringSegment }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "LineStringSegment", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public LineStringSegment createLineStringSegment(LineStringSegmentTypeType value) {
        return new LineStringSegment(value);
    }

    /**
     * Create an instance of {@link MultiLocation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiLocation")
    public MultiLocation createMultiLocation(MultiPointPropertyTypeType value) {
        return new MultiLocation(value);
    }

    /**
     * Create an instance of {@link Cylinder }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Cylinder", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGriddedSurface")
    public Cylinder createCylinder(CylinderTypeType value) {
        return new Cylinder(value);
    }

    /**
     * Create an instance of {@link TopoSolid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TopoSolid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTopoPrimitive")
    public TopoSolid createTopoSolid(TopoSolidTypeType value) {
        return new TopoSolid(value);
    }

    /**
     * Create an instance of {@link MultiCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiCoverage")
    public MultiCoverage createMultiCoverage(MultiSurfacePropertyTypeType value) {
        return new MultiCoverage(value);
    }

    /**
     * Create an instance of {@link SingleCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "singleCRSRef")
    public SingleCRSRef createSingleCRSRef(SingleCRSPropertyTypeType value) {
        return new SingleCRSRef(value);
    }

    /**
     * Create an instance of {@link LinearCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "LinearCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public LinearCSUpperCase createLinearCSUpperCase(LinearCSTypeType value) {
        return new LinearCSUpperCase(value);
    }

    /**
     * Create an instance of {@link ValueOfParameter }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "valueOfParameter", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "operationParameter")
    public ValueOfParameter createValueOfParameter(OperationParameterPropertyTypeType value) {
        return new ValueOfParameter(value);
    }

    /**
     * Create an instance of {@link DoubleOrNilReasonTupleList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "doubleOrNilReasonTupleList")
    public DoubleOrNilReasonTupleList createDoubleOrNilReasonTupleList(List<String> value) {
        return new DoubleOrNilReasonTupleList(((List<String> ) value));
    }

    /**
     * Create an instance of {@link AnchorPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "anchorPoint", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "anchorDefinition")
    public AnchorPoint createAnchorPoint(CodeTypeType value) {
        return new AnchorPoint(value);
    }

    /**
     * Create an instance of {@link Origin }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "origin")
    public Origin createOrigin(XMLGregorianCalendar value) {
        return new Origin(value);
    }

    /**
     * Create an instance of {@link SolidMember }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "solidMember")
    public SolidMember createSolidMember(SolidPropertyTypeType value) {
        return new SolidMember(value);
    }

    /**
     * Create an instance of {@link OperationParameter }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "operationParameter")
    public OperationParameter createOperationParameter(OperationParameterPropertyTypeType value) {
        return new OperationParameter(value);
    }

    /**
     * Create an instance of {@link CircleByCenterPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CircleByCenterPoint", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "ArcByCenterPoint")
    public CircleByCenterPoint createCircleByCenterPoint(CircleByCenterPointTypeType value) {
        return new CircleByCenterPoint(value);
    }

    /**
     * Create an instance of {@link Conversion }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "conversion")
    public Conversion createConversion(GeneralConversionPropertyTypeType value) {
        return new Conversion(value);
    }

    /**
     * Create an instance of {@link TimeInterval }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "timeInterval")
    public TimeInterval createTimeInterval(TimeIntervalLengthTypeType value) {
        return new TimeInterval(value);
    }

    /**
     * Create an instance of {@link ValueFile }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "valueFile")
    public ValueFile createValueFile(String value) {
        return new ValueFile(value);
    }

    /**
     * Create an instance of {@link CoordinateSystem }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "coordinateSystem")
    public CoordinateSystem createCoordinateSystem(CoordinateSystemPropertyTypeType value) {
        return new CoordinateSystem(value);
    }

    /**
     * Create an instance of {@link GeographicCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GeographicCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public GeographicCRS createGeographicCRS(GeographicCRSTypeType value) {
        return new GeographicCRS(value);
    }

    /**
     * Create an instance of {@link TimeOrdinalReferenceSystem }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeOrdinalReferenceSystem", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "TimeReferenceSystem")
    public TimeOrdinalReferenceSystem createTimeOrdinalReferenceSystem(TimeOrdinalReferenceSystemTypeType value) {
        return new TimeOrdinalReferenceSystem(value);
    }

    /**
     * Create an instance of {@link Scope }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "scope")
    public Scope createScope(String value) {
        return new Scope(value);
    }

    /**
     * Create an instance of {@link ch.ehi.oereb.schemas.gml._3_2.Duration }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "duration")
    public ch.ehi.oereb.schemas.gml._3_2.Duration createDuration(javax.xml.datatype.Duration value) {
        return new ch.ehi.oereb.schemas.gml._3_2.Duration(value);
    }

    /**
     * Create an instance of {@link DirectedTopoSolid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "directedTopoSolid")
    public DirectedTopoSolid createDirectedTopoSolid(DirectedTopoSolidPropertyTypeType value) {
        return new DirectedTopoSolid(value);
    }

    /**
     * Create an instance of {@link TemporalCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TemporalCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public TemporalCRS createTemporalCRS(TemporalCRSTypeType value) {
        return new TemporalCRS(value);
    }

    /**
     * Create an instance of {@link AnchorDefinition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "anchorDefinition")
    public AnchorDefinition createAnchorDefinition(CodeTypeType value) {
        return new AnchorDefinition(value);
    }

    /**
     * Create an instance of {@link SolidMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "solidMembers")
    public SolidMembers createSolidMembers(SolidArrayPropertyTypeType value) {
        return new SolidMembers(value);
    }

    /**
     * Create an instance of {@link CurveArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "curveArrayProperty")
    public CurveArrayProperty createCurveArrayProperty(CurveArrayPropertyTypeType value) {
        return new CurveArrayProperty(value);
    }

    /**
     * Create an instance of {@link ResultOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "resultOf")
    public ResultOf createResultOf(ResultTypeType value) {
        return new ResultOf(value);
    }

    /**
     * Create an instance of {@link ImageDatumRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "imageDatumRef")
    public ImageDatumRef createImageDatumRef(ImageDatumPropertyTypeType value) {
        return new ImageDatumRef(value);
    }

    /**
     * Create an instance of {@link CoordinateSystemRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "coordinateSystemRef")
    public CoordinateSystemRef createCoordinateSystemRef(CoordinateSystemPropertyTypeType value) {
        return new CoordinateSystemRef(value);
    }

    /**
     * Create an instance of {@link BaseUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "BaseUnit", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "UnitDefinition")
    public BaseUnit createBaseUnit(BaseUnitTypeType value) {
        return new BaseUnit(value);
    }

    /**
     * Create an instance of {@link TimeCoordinateSystem }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeCoordinateSystem", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "TimeReferenceSystem")
    public TimeCoordinateSystem createTimeCoordinateSystem(TimeCoordinateSystemTypeType value) {
        return new TimeCoordinateSystem(value);
    }

    /**
     * Create an instance of {@link MultiSurfaceCoverage }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiSurfaceCoverage", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDiscreteCoverage")
    public MultiSurfaceCoverage createMultiSurfaceCoverage(DiscreteCoverageTypeType value) {
        return new MultiSurfaceCoverage(value);
    }

    /**
     * Create an instance of {@link IncludesParameter }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "includesParameter", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "parameter")
    public IncludesParameter createIncludesParameter(AbstractGeneralOperationParameterPropertyTypeType value) {
        return new IncludesParameter(value);
    }

    /**
     * Create an instance of {@link UnitOfMeasure }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "unitOfMeasure")
    public UnitOfMeasure createUnitOfMeasure(UnitOfMeasureTypeType value) {
        return new UnitOfMeasure(value);
    }

    /**
     * Create an instance of {@link ImageCRSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "imageCRSRef")
    public ImageCRSRef createImageCRSRef(ImageCRSPropertyTypeType value) {
        return new ImageCRSRef(value);
    }

    /**
     * Create an instance of {@link DirectedNode }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "directedNode")
    public DirectedNode createDirectedNode(DirectedNodePropertyTypeType value) {
        return new DirectedNode(value);
    }

    /**
     * Create an instance of {@link CenterLineOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "centerLineOf")
    public CenterLineOf createCenterLineOf(CurvePropertyTypeType value) {
        return new CenterLineOf(value);
    }

    /**
     * Create an instance of {@link Status }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "status")
    public Status createStatus(StringOrRefTypeType value) {
        return new Status(value);
    }

    /**
     * Create an instance of {@link ValidTime }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "validTime")
    public ValidTime createValidTime(TimePrimitivePropertyTypeType value) {
        return new ValidTime(value);
    }

    /**
     * Create an instance of {@link BaseGeodeticCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "baseGeodeticCRS")
    public BaseGeodeticCRS createBaseGeodeticCRS(GeodeticCRSPropertyTypeType value) {
        return new BaseGeodeticCRS(value);
    }

    /**
     * Create an instance of {@link AbstractRing }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractRing", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurve")
    public AbstractRing createAbstractRing(AbstractRingTypeType value) {
        return new AbstractRing(value);
    }

    /**
     * Create an instance of {@link TimeClock }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeClock", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "TimeReferenceSystem")
    public TimeClock createTimeClock(TimeClockTypeType value) {
        return new TimeClock(value);
    }

    /**
     * Create an instance of {@link GeodeticDatumRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "geodeticDatumRef")
    public GeodeticDatumRef createGeodeticDatumRef(GeodeticDatumPropertyTypeType value) {
        return new GeodeticDatumRef(value);
    }

    /**
     * Create an instance of {@link RectifiedGridDomain }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "rectifiedGridDomain", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "domainSet")
    public RectifiedGridDomain createRectifiedGridDomain(DomainSetTypeType value) {
        return new RectifiedGridDomain(value);
    }

    /**
     * Create an instance of {@link CompoundCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CompoundCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCRS")
    public CompoundCRS createCompoundCRS(CompoundCRSTypeType value) {
        return new CompoundCRS(value);
    }

    /**
     * Create an instance of {@link SurfaceMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "surfaceMembers")
    public SurfaceMembers createSurfaceMembers(SurfaceArrayPropertyTypeType value) {
        return new SurfaceMembers(value);
    }

    /**
     * Create an instance of {@link SourceCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "sourceCRS")
    public SourceCRS createSourceCRS(CRSPropertyTypeType value) {
        return new SourceCRS(value);
    }

    /**
     * Create an instance of {@link CylindricalCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "cylindricalCSRef")
    public CylindricalCSRef createCylindricalCSRef(CylindricalCSPropertyTypeType value) {
        return new CylindricalCSRef(value);
    }

    /**
     * Create an instance of {@link TrianglePatches }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "trianglePatches", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "patches")
    public TrianglePatches createTrianglePatches(SurfacePatchArrayPropertyTypeType value) {
        return new TrianglePatches(value);
    }

    /**
     * Create an instance of {@link AbstractFeatureCollection }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractFeatureCollection", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractFeature")
    public AbstractFeatureCollection createAbstractFeatureCollection(AbstractFeatureCollectionTypeType value) {
        return new AbstractFeatureCollection(value);
    }

    /**
     * Create an instance of {@link OperationMethodRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "operationMethodRef")
    public OperationMethodRef createOperationMethodRef(OperationMethodPropertyTypeType value) {
        return new OperationMethodRef(value);
    }

    /**
     * Create an instance of {@link DynamicMembers }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "dynamicMembers")
    public DynamicMembers createDynamicMembers(DynamicFeatureMemberTypeType value) {
        return new DynamicMembers(value);
    }

    /**
     * Create an instance of {@link IndirectEntry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "indirectEntry")
    public IndirectEntry createIndirectEntry(IndirectEntryTypeType value) {
        return new IndirectEntry(value);
    }

    /**
     * Create an instance of {@link MinimumValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "minimumValue")
    public MinimumValue createMinimumValue(Double value) {
        return new MinimumValue(value);
    }

    /**
     * Create an instance of {@link DirectedEdge }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "directedEdge")
    public DirectedEdge createDirectedEdge(DirectedEdgePropertyTypeType value) {
        return new DirectedEdge(value);
    }

    /**
     * Create an instance of {@link UsesCartesianCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesCartesianCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "cartesianCS")
    public UsesCartesianCS createUsesCartesianCS(CartesianCSPropertyTypeType value) {
        return new UsesCartesianCS(value);
    }

    /**
     * Create an instance of {@link PrimeMeridianUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "PrimeMeridian", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public PrimeMeridianUpperCase createPrimeMeridianUpperCase(PrimeMeridianTypeType value) {
        return new PrimeMeridianUpperCase(value);
    }

    /**
     * Create an instance of {@link UsesAffineCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesAffineCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "affineCS")
    public UsesAffineCS createUsesAffineCS(AffineCSPropertyTypeType value) {
        return new UsesAffineCS(value);
    }

    /**
     * Create an instance of {@link AbstractTimeGeometricPrimitive }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTimeGeometricPrimitive", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimePrimitive")
    public AbstractTimeGeometricPrimitive createAbstractTimeGeometricPrimitive(AbstractTimeGeometricPrimitiveTypeType value) {
        return new AbstractTimeGeometricPrimitive(value);
    }

    /**
     * Create an instance of {@link TemporalCSRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "temporalCSRef")
    public TemporalCSRef createTemporalCSRef(TemporalCSPropertyTypeType value) {
        return new TemporalCSRef(value);
    }

    /**
     * Create an instance of {@link ValueComponents }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "valueComponents")
    public ValueComponents createValueComponents(ValueArrayPropertyTypeType value) {
        return new ValueComponents(value);
    }

    /**
     * Create an instance of {@link ValueArray }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ValueArray", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "CompositeValue")
    public ValueArray createValueArray(ValueArrayTypeType value) {
        return new ValueArray(value);
    }

    /**
     * Create an instance of {@link BaseCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "baseCRS")
    public BaseCRS createBaseCRS(SingleCRSPropertyTypeType value) {
        return new BaseCRS(value);
    }

    /**
     * Create an instance of {@link PriorityLocation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "priorityLocation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "location")
    public PriorityLocation createPriorityLocation(PriorityLocationPropertyTypeType value) {
        return new PriorityLocation(value);
    }

    /**
     * Create an instance of {@link Geodesic }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Geodesic", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "GeodesicString")
    public Geodesic createGeodesic(GeodesicTypeType value) {
        return new Geodesic(value);
    }

    /**
     * Create an instance of {@link DefinitionProxy }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DefinitionProxy", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public DefinitionProxy createDefinitionProxy(DefinitionProxyTypeType value) {
        return new DefinitionProxy(value);
    }

    /**
     * Create an instance of {@link CompositeSolid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CompositeSolid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSolid")
    public CompositeSolid createCompositeSolid(CompositeSolidTypeType value) {
        return new CompositeSolid(value);
    }

    /**
     * Create an instance of {@link AbstractObject }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractObject")
    public AbstractObject createAbstractObject(Object value) {
        return new AbstractObject(value);
    }

    /**
     * Create an instance of {@link QuantityTypeReference }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "quantityTypeReference")
    public QuantityTypeReference createQuantityTypeReference(ReferenceTypeType value) {
        return new QuantityTypeReference(value);
    }

    /**
     * Create an instance of {@link DataSourceReference }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "dataSourceReference")
    public DataSourceReference createDataSourceReference(ReferenceTypeType value) {
        return new DataSourceReference(value);
    }

    /**
     * Create an instance of {@link TimeCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public TimeCSUpperCase createTimeCSUpperCase(TimeCSTypeType value) {
        return new TimeCSUpperCase(value);
    }

    /**
     * Create an instance of {@link Segments }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "segments")
    public Segments createSegments(CurveSegmentArrayPropertyTypeType value) {
        return new Segments(value);
    }

    /**
     * Create an instance of {@link UsesVerticalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesVerticalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "verticalCS")
    public UsesVerticalCS createUsesVerticalCS(VerticalCSPropertyTypeType value) {
        return new UsesVerticalCS(value);
    }

    /**
     * Create an instance of {@link DescriptionReference }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "descriptionReference")
    public DescriptionReference createDescriptionReference(ReferenceTypeType value) {
        return new DescriptionReference(value);
    }

    /**
     * Create an instance of {@link TopoSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TopoSurface")
    public TopoSurface createTopoSurface(TopoSurfaceTypeType value) {
        return new TopoSurface(value);
    }

    /**
     * Create an instance of {@link MaximalComplex }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "maximalComplex")
    public MaximalComplex createMaximalComplex(TopoComplexPropertyTypeType value) {
        return new MaximalComplex(value);
    }

    /**
     * Create an instance of {@link SolidProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "solidProperty")
    public SolidProperty createSolidProperty(SolidPropertyTypeType value) {
        return new SolidProperty(value);
    }

    /**
     * Create an instance of {@link CompositeValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CompositeValue", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractValue")
    public CompositeValue createCompositeValue(CompositeValueTypeType value) {
        return new CompositeValue(value);
    }

    /**
     * Create an instance of {@link Angle }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "angle")
    public Angle createAngle(AngleTypeType value) {
        return new Angle(value);
    }

    /**
     * Create an instance of {@link VerticalCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "VerticalCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleCRS")
    public VerticalCRS createVerticalCRS(VerticalCRSTypeType value) {
        return new VerticalCRS(value);
    }

    /**
     * Create an instance of {@link Member }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "member")
    public Member createMember(AssociationRoleTypeType value) {
        return new Member(value);
    }

    /**
     * Create an instance of {@link PassThroughOperation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "PassThroughOperation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractSingleOperation")
    public PassThroughOperation createPassThroughOperation(PassThroughOperationTypeType value) {
        return new PassThroughOperation(value);
    }

    /**
     * Create an instance of {@link ConversionUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Conversion", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralConversion")
    public ConversionUpperCase createConversionUpperCase(ConversionTypeType value) {
        return new ConversionUpperCase(value);
    }

    /**
     * Create an instance of {@link UsesAxis }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesAxis", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "axis")
    public UsesAxis createUsesAxis(CoordinateSystemAxisPropertyTypeType value) {
        return new UsesAxis(value);
    }

    /**
     * Create an instance of {@link VerticalDatumUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "VerticalDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractDatum")
    public VerticalDatumUpperCase createVerticalDatumUpperCase(VerticalDatumTypeType value) {
        return new VerticalDatumUpperCase(value);
    }

    /**
     * Create an instance of {@link TemporalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TemporalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public TemporalCS createTemporalCS(TemporalCSTypeType value) {
        return new TemporalCS(value);
    }

    /**
     * Create an instance of {@link File }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "File", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public File createFile(FileTypeType value) {
        return new File(value);
    }

    /**
     * Create an instance of {@link MultiCenterOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiCenterOf")
    public MultiCenterOf createMultiCenterOf(MultiPointPropertyTypeType value) {
        return new MultiCenterOf(value);
    }

    /**
     * Create an instance of {@link PointArrayProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "pointArrayProperty")
    public PointArrayProperty createPointArrayProperty(PointArrayPropertyTypeType value) {
        return new PointArrayProperty(value);
    }

    /**
     * Create an instance of {@link MultiPosition }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiPosition")
    public MultiPosition createMultiPosition(MultiPointPropertyTypeType value) {
        return new MultiPosition(value);
    }

    /**
     * Create an instance of {@link Position }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "position")
    public Position createPosition(PointPropertyTypeType value) {
        return new Position(value);
    }

    /**
     * Create an instance of {@link AbstractImplicitGeometry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractImplicitGeometry", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometry")
    public AbstractImplicitGeometry createAbstractImplicitGeometry(AbstractGeometryTypeType value) {
        return new AbstractImplicitGeometry(value);
    }

    /**
     * Create an instance of {@link TopoPointProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "topoPointProperty")
    public TopoPointProperty createTopoPointProperty(TopoPointPropertyTypeType value) {
        return new TopoPointProperty(value);
    }

    /**
     * Create an instance of {@link AbstractValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractValue", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractObject")
    public AbstractValue createAbstractValue(Object value) {
        return new AbstractValue(value);
    }

    /**
     * Create an instance of {@link MultiSolid }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiSolid", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricAggregate")
    public MultiSolid createMultiSolid(MultiSolidTypeType value) {
        return new MultiSolid(value);
    }

    /**
     * Create an instance of {@link CylindricalCS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "cylindricalCS")
    public CylindricalCS createCylindricalCS(CylindricalCSPropertyTypeType value) {
        return new CylindricalCS(value);
    }

    /**
     * Create an instance of {@link CylindricalCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CylindricalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public CylindricalCSUpperCase createCylindricalCSUpperCase(CylindricalCSTypeType value) {
        return new CylindricalCSUpperCase(value);
    }

    /**
     * Create an instance of {@link DirectedFace }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "directedFace")
    public DirectedFace createDirectedFace(DirectedFacePropertyTypeType value) {
        return new DirectedFace(value);
    }

    /**
     * Create an instance of {@link PosList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "posList")
    public PosList createPosList(DirectPositionListTypeType value) {
        return new PosList(value);
    }

    /**
     * Create an instance of {@link DynamicFeatureCollection }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DynamicFeatureCollection", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "DynamicFeature")
    public DynamicFeatureCollection createDynamicFeatureCollection(DynamicFeatureCollectionTypeType value) {
        return new DynamicFeatureCollection(value);
    }

    /**
     * Create an instance of {@link Subject }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "subject", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "target")
    public Subject createSubject(TargetPropertyTypeType value) {
        return new Subject(value);
    }

    /**
     * Create an instance of {@link Null }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Null")
    public Null createNull(List<String> value) {
        return new Null(((List<String> ) value));
    }

    /**
     * Create an instance of {@link AbstractSingleCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractSingleCRS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCRS")
    public AbstractSingleCRS createAbstractSingleCRS(AbstractCRSTypeType value) {
        return new AbstractSingleCRS(value);
    }

    /**
     * Create an instance of {@link MethodFormula }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "methodFormula", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "formula")
    public MethodFormula createMethodFormula(CodeTypeType value) {
        return new MethodFormula(value);
    }

    /**
     * Create an instance of {@link VerticalCSUpperCase }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "VerticalCS", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCoordinateSystem")
    public VerticalCSUpperCase createVerticalCSUpperCase(VerticalCSTypeType value) {
        return new VerticalCSUpperCase(value);
    }

    /**
     * Create an instance of {@link Members }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "members")
    public Members createMembers(ArrayAssociationTypeType value) {
        return new Members(value);
    }

    /**
     * Create an instance of {@link PrimeMeridian }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "primeMeridian")
    public PrimeMeridian createPrimeMeridian(PrimeMeridianPropertyTypeType value) {
        return new PrimeMeridian(value);
    }

    /**
     * Create an instance of {@link AbstractSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricPrimitive")
    public AbstractSurface createAbstractSurface(AbstractSurfaceTypeType value) {
        return new AbstractSurface(value);
    }

    /**
     * Create an instance of {@link AbstractTimeComplex }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractTimeComplex", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTimeObject")
    public AbstractTimeComplex createAbstractTimeComplex(AbstractTimeComplexTypeType value) {
        return new AbstractTimeComplex(value);
    }

    /**
     * Create an instance of {@link BSpline }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "BSpline", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public BSpline createBSpline(BSplineTypeType value) {
        return new BSpline(value);
    }

    /**
     * Create an instance of {@link GeodesicString }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "GeodesicString", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public GeodesicString createGeodesicString(GeodesicStringTypeType value) {
        return new GeodesicString(value);
    }

    /**
     * Create an instance of {@link AbstractScalarValueList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractScalarValueList", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractValue")
    public AbstractScalarValueList createAbstractScalarValueList(Object value) {
        return new AbstractScalarValueList(value);
    }

    /**
     * Create an instance of {@link Point }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Point", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricPrimitive")
    public Point createPoint(PointTypeType value) {
        return new Point(value);
    }

    /**
     * Create an instance of {@link OperationParameterGroup }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "OperationParameterGroup", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeneralOperationParameter")
    public OperationParameterGroup createOperationParameterGroup(OperationParameterGroupTypeType value) {
        return new OperationParameterGroup(value);
    }

    /**
     * Create an instance of {@link GeodeticDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "geodeticDatum")
    public GeodeticDatum createGeodeticDatum(GeodeticDatumPropertyTypeType value) {
        return new GeodeticDatum(value);
    }

    /**
     * Create an instance of {@link EngineeringDatumRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "engineeringDatumRef")
    public EngineeringDatumRef createEngineeringDatumRef(EngineeringDatumPropertyTypeType value) {
        return new EngineeringDatumRef(value);
    }

    /**
     * Create an instance of {@link UsesEngineeringDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "usesEngineeringDatum", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "engineeringDatum")
    public UsesEngineeringDatum createUsesEngineeringDatum(EngineeringDatumPropertyTypeType value) {
        return new UsesEngineeringDatum(value);
    }

    /**
     * Create an instance of {@link Edge }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Edge", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractTopoPrimitive")
    public Edge createEdge(EdgeTypeType value) {
        return new Edge(value);
    }

    /**
     * Create an instance of {@link MaximumValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "maximumValue")
    public MaximumValue createMaximumValue(Double value) {
        return new MaximumValue(value);
    }

    /**
     * Create an instance of {@link GeneralOperationParameter }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "generalOperationParameter", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "parameter")
    public GeneralOperationParameter createGeneralOperationParameter(AbstractGeneralOperationParameterPropertyTypeType value) {
        return new GeneralOperationParameter(value);
    }

    /**
     * Create an instance of {@link Remarks }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "remarks")
    public Remarks createRemarks(String value) {
        return new Remarks(value);
    }

    /**
     * Create an instance of {@link MultiGeometry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MultiGeometry", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGeometricAggregate")
    public MultiGeometry createMultiGeometry(MultiGeometryTypeType value) {
        return new MultiGeometry(value);
    }

    /**
     * Create an instance of {@link SingleOperationRef }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "singleOperationRef")
    public SingleOperationRef createSingleOperationRef(SingleOperationPropertyTypeType value) {
        return new SingleOperationRef(value);
    }

    /**
     * Create an instance of {@link TargetCRS }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "targetCRS")
    public TargetCRS createTargetCRS(CRSPropertyTypeType value) {
        return new TargetCRS(value);
    }

    /**
     * Create an instance of {@link Array }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Array", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public Array createArray(ArrayTypeType value) {
        return new Array(value);
    }

    /**
     * Create an instance of {@link CategoryList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CategoryList", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValueList")
    public CategoryList createCategoryList(CodeOrNilReasonListTypeType value) {
        return new CategoryList(value);
    }

    /**
     * Create an instance of {@link DynamicFeature }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DynamicFeature", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractFeature")
    public DynamicFeature createDynamicFeature(DynamicFeatureTypeType value) {
        return new DynamicFeature(value);
    }

    /**
     * Create an instance of {@link MappingRule }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "MappingRule")
    public MappingRule createMappingRule(StringOrRefTypeType value) {
        return new MappingRule(value);
    }

    /**
     * Create an instance of {@link TargetDimensions }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "targetDimensions")
    public TargetDimensions createTargetDimensions(BigInteger value) {
        return new TargetDimensions(value);
    }

    /**
     * Create an instance of {@link DirectedObservation }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "DirectedObservation", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Observation")
    public DirectedObservation createDirectedObservation(DirectedObservationTypeType value) {
        return new DirectedObservation(value);
    }

    /**
     * Create an instance of {@link CoordinateSystemAxis }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "CoordinateSystemAxis", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public CoordinateSystemAxis createCoordinateSystemAxis(CoordinateSystemAxisTypeType value) {
        return new CoordinateSystemAxis(value);
    }

    /**
     * Create an instance of {@link MultiSolidProperty }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiSolidProperty")
    public MultiSolidProperty createMultiSolidProperty(MultiSolidPropertyTypeType value) {
        return new MultiSolidProperty(value);
    }

    /**
     * Create an instance of {@link ConventionalUnit }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ConventionalUnit", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "UnitDefinition")
    public ConventionalUnit createConventionalUnit(ConventionalUnitTypeType value) {
        return new ConventionalUnit(value);
    }

    /**
     * Create an instance of {@link QuantityList }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "QuantityList", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractScalarValueList")
    public QuantityList createQuantityList(MeasureOrNilReasonListTypeType value) {
        return new QuantityList(value);
    }

    /**
     * Create an instance of {@link DefaultCodeSpace }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "defaultCodeSpace")
    public DefaultCodeSpace createDefaultCodeSpace(String value) {
        return new DefaultCodeSpace(value);
    }

    /**
     * Create an instance of {@link Exterior }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "exterior")
    public Exterior createExterior(AbstractRingPropertyTypeType value) {
        return new Exterior(value);
    }

    /**
     * Create an instance of {@link Dictionary }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "Dictionary", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "Definition")
    public Dictionary createDictionary(DictionaryTypeType value) {
        return new Dictionary(value);
    }

    /**
     * Create an instance of {@link AbstractGeometry }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGeometry", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractGML")
    public AbstractGeometry createAbstractGeometry(AbstractGeometryTypeType value) {
        return new AbstractGeometry(value);
    }

    /**
     * Create an instance of {@link Direction }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "direction")
    public Direction createDirection(DirectionPropertyTypeType value) {
        return new Direction(value);
    }

    /**
     * Create an instance of {@link AbstractGriddedSurface }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractGriddedSurface", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractParametricCurveSurface")
    public AbstractGriddedSurface createAbstractGriddedSurface(AbstractGriddedSurfaceTypeType value) {
        return new AbstractGriddedSurface(value);
    }

    /**
     * Create an instance of {@link MultiExtentOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "multiExtentOf")
    public MultiExtentOf createMultiExtentOf(MultiSurfacePropertyTypeType value) {
        return new MultiExtentOf(value);
    }

    /**
     * Create an instance of {@link EngineeringDatum }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "engineeringDatum")
    public EngineeringDatum createEngineeringDatum(EngineeringDatumPropertyTypeType value) {
        return new EngineeringDatum(value);
    }

    /**
     * Create an instance of {@link AbstractScalarValue }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "AbstractScalarValue", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractValue")
    public AbstractScalarValue createAbstractScalarValue(Object value) {
        return new AbstractScalarValue(value);
    }

    /**
     * Create an instance of {@link TimeOrdinalEra }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "TimeOrdinalEra")
    public TimeOrdinalEra createTimeOrdinalEra(TimeOrdinalEraTypeType value) {
        return new TimeOrdinalEra(value);
    }

    /**
     * Create an instance of {@link ExtentOf }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "extentOf")
    public ExtentOf createExtentOf(SurfacePropertyTypeType value) {
        return new ExtentOf(value);
    }

    /**
     * Create an instance of {@link AbstractAssociationRole }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "abstractAssociationRole")
    public AbstractAssociationRole createAbstractAssociationRole(AssociationRoleTypeType value) {
        return new AbstractAssociationRole(value);
    }

    /**
     * Create an instance of {@link QuantityExtent }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "QuantityExtent", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractValue")
    public QuantityExtent createQuantityExtent(QuantityExtentTypeType value) {
        return new QuantityExtent(value);
    }

    /**
     * Create an instance of {@link ArcByCenterPoint }}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "ArcByCenterPoint", substitutionHeadNamespace = "http://www.opengis.net/gml/3.2", substitutionHeadName = "AbstractCurveSegment")
    public ArcByCenterPoint createArcByCenterPoint(ArcByCenterPointTypeType value) {
        return new ArcByCenterPoint(value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GridLimitsTypeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "limits", scope = GridTypeType.class)
    public JAXBElement<GridLimitsTypeType> createGridTypeTypeLimits(GridLimitsTypeType value) {
        return new JAXBElement<GridLimitsTypeType>(_GridTypeTypeLimits_QNAME, GridLimitsTypeType.class, GridTypeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "axisName", scope = GridTypeType.class)
    public JAXBElement<String> createGridTypeTypeAxisName(String value) {
        return new JAXBElement<String>(_GridTypeTypeAxisName_QNAME, String.class, GridTypeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link List }{@code <}{@link String }{@code >}{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/gml/3.2", name = "axisLabels", scope = GridTypeType.class)
    public JAXBElement<List<String>> createGridTypeTypeAxisLabels(List<String> value) {
        return new JAXBElement<List<String>>(_GridTypeTypeAxisLabels_QNAME, ((Class) List.class), GridTypeType.class, ((List<String> ) value));
    }

}
